{"version":3,"sources":["webpack:///./App/Components/Animations/fade-wrapper.jsx","webpack:///./App/Components/Animations/index.js","webpack:///./public/images/app/contract_details/ic-exittime-won.svg","webpack:///./public/images/app/contract_details/ic-exittime-loss.svg","webpack:///./public/images/app/contract_details/dark/ic-barrier.svg","webpack:///./public/images/app/contract_details/dark/ic-duration.svg","webpack:///./public/images/app/contract_details/dark/ic-entryspot.svg","webpack:///./public/images/app/contract_details/dark/ic-exitspot.svg","webpack:///./public/images/app/contract_details/dark/ic-id.svg","webpack:///./public/images/app/contract_details/dark/ic-starttime.svg","webpack:///./public/images/app/contract_details/dark/ic-target.svg","webpack:///./public/images/app/contract_details/light/ic-barrier.svg","webpack:///./public/images/app/contract_details/light/ic-duration.svg","webpack:///./public/images/app/contract_details/light/ic-entryspot.svg","webpack:///./public/images/app/contract_details/light/ic-exitspot.svg","webpack:///./public/images/app/contract_details/light/ic-id.svg","webpack:///./public/images/app/contract_details/light/ic-starttime.svg","webpack:///./public/images/app/contract_details/light/ic-target.svg","webpack:///./App/Components/Elements/ContractAudit/Helpers/icons.js","webpack:///./App/Components/Elements/ContractAudit/contract-audit-item.jsx","webpack:///./App/Components/Elements/ContractAudit/contract-audit.jsx","webpack:///./Modules/Reports/Components/profit-loss-card-content.jsx","webpack:///./App/Components/Elements/ContractDrawer/contract-card-body.jsx","webpack:///./App/Components/Elements/ContractDrawer/contract-card-footer.jsx","webpack:///./App/Components/Elements/ContractDrawer/contract-card-header.jsx","webpack:///./App/Components/Elements/ContractDrawer/contract-card.jsx","webpack:///./App/Components/Elements/ContractDrawer/contract-drawer.jsx","webpack:///./Modules/Contract/Containers/contract-replay.jsx","webpack:///./Modules/Contract/Containers/contract.jsx"],"names":["FadeInFromTopDiv","posed","div","enter","y","opacity","delay","transition","default","duration","exit","FadeInFromBottomDiv","FadeInOnlyDiv","FadeWrapper","_ref","children","className","keyname","is_visible","type","react_default","a","createElement","react_pose_es","key","propTypes","PropTypes","node","bool","string","__webpack_require__","d","__webpack_exports__","fade_wrapper_FadeWrapper","module","exports","p","getThemedIcon","is_dark_theme","IconType","ic_id_default","light_ic_id_default","ic_duration_default","light_ic_duration_default","ic_barrier_default","light_ic_barrier_default","ic_target_default","light_ic_target_default","ic_starttime_default","light_ic_starttime_default","ic_entryspot_default","light_ic_entryspot_default","ic_exitspot_default","light_ic_exitspot_default","ContractAuditItem","icon","label","value","value2","Fragment","oneOfType","number","ContractAudit","React","PureComponent","_this$props","this","props","contract_end_time","contract_info","duration_unit","exit_spot","has_result","IconExitTime","profit","ic_exittime_won_default","ic_exittime_loss_default","classNames","contract-audit__wrapper--is-open","is_sold","lib","style","width","height","autoHide","contract_audit_item","localize","transaction_ids","buy","value_two","sell","tick_count","concat","isDigitType","contract_type","getBarrierLabel","getBarrierValue","toGMTFormat","epochToMoment","purchase_time","addCommaToNumber","entry_spot","entry_tick_time","isNaN","exit_tick_time","object","is_open","ProfitLossCardContent","currency","pl_value","payout","status","i18n_default_text","pl-card__item__body--is-crypto","isCryptocurrency","pl-card__item__body--loss","pl-card__item__body--profit","money","has_sign","amount","pl-card__indicative--movement-complete","Assets_icon","ContractCardBody","arrayOf","ContractCardFooter","array","ContractCardHeader","ContractCard","profit_loss","contract-card--green","contract-card--red","ContractDrawer","state","is_shade_on","handleShade","shade","_this","setState","redirectBackToReports","history","location","goBack","push","routes","reports","Component","_this$props$contract_","buy_price","exit_tick","is_sell_requested","onClickSell","isUserSold","percentage","getTimePercentage","server_time","date_expiry","contract_card","contract_card_header","underlying_icon","market","underlying","display_name","contract_type_cell","ProgressSlider","is_loading","remaining_time","current_tick","getCurrentTick","getTick","ticks_count","contract_card_body","profit_loss_card_content","getIndicativePrice","contract_card_footer","react_transition_group","in","isValidToSell","timeout","enterDone","unmountOnExit","Form_button","btn--loading","is_disabled","text","onClick","contract_id","contract_audit","getEndTime","is_shade_visible","getDurationTime","getDurationUnitText","getDurationPeriod","body_content","getBodyContent","heading","func","withRouter","SmartChart","lazy","Promise","all","e","then","bind","ContractReplay","setWrapperRef","wrapper_ref","handleClickOutside","event","contains","target","classname_string","classList","test","AppRoutes","trade","hidePositions","setChartLoader","showBlur","url_contract_id","exec","pathname","onMount","document","addEventListener","localStorage","removeItem","hideBlur","onUnmount","removeEventListener","_this2","action_bar_items","title","config","chart_id","is_chart_loading","is_static_chart","ref","Animations","contract_drawer","Suspense","fallback","map","notification_messages","chart_loader","isEmptyObject","_extends","chartControlsWidgets","Digits","digits","InfoBox","info_box","should_show_last_digit_stats","symbol","connect","_ref2","common","modules","ui","smart_chart","replay_id","contract","replay_config","is_replay_static_chart","onMountReplay","onUnmountReplay","replay_info","replay_indicative_status","setIsChartLoading","hidePositionsFooterToggle","hideRouteBlur","is_dark_mode_on","showRouteBlur","Contract","has_error","clearError","Errors","message","error_message","redirect_label","redirectOnClick","should_show_refresh","contract_replay","match","params","is_mobile"],"mappings":"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","file":"js/contract.7cd927dbaeb476050c76.js","sourcesContent":["import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport posed,\n{ PoseGroup }         from 'react-pose';\n\nconst FadeInFromTopDiv = posed.div({\n    enter: {\n        y         : 0,\n        opacity   : 1,\n        delay     : 300,\n        transition: {\n            default: { duration: 250 },\n        },\n    },\n    exit: {\n        y         : -50,\n        opacity   : 0,\n        transition: { duration: 250 },\n    },\n});\n\nconst FadeInFromBottomDiv = posed.div({\n    enter: {\n        y         : 0,\n        opacity   : 1,\n        delay     : 300,\n        transition: {\n            default: { duration: 250 },\n        },\n    },\n    exit: {\n        y         : 50,\n        opacity   : 0,\n        transition: { duration: 250 },\n    },\n});\n\nconst FadeInOnlyDiv = posed.div({\n    enter: {\n\n        opacity   : 1,\n        transition: { duration: 300 },\n    },\n    exit: {\n        opacity   : 0,\n        transition: { duration: 300 },\n    },\n});\n\nconst FadeWrapper = ({\n    children,\n    className,\n    keyname,\n    is_visible,\n    type,\n}) => {\n    if (type === 'top') {\n        return (\n            <PoseGroup>\n                {is_visible &&\n                    <FadeInFromTopDiv className={className} key={keyname}>\n                        {children}\n                    </FadeInFromTopDiv>\n                }\n            </PoseGroup>\n        );\n    }\n    if (type === 'bottom') {\n        return (\n            <PoseGroup>\n                {is_visible &&\n                    <FadeInFromBottomDiv className={className} key={keyname}>\n                        {children}\n                    </FadeInFromBottomDiv>\n                }\n            </PoseGroup>\n        );\n    }\n    return (\n        <PoseGroup>\n            {is_visible &&\n                <FadeInOnlyDiv className={className} key={keyname}>\n                    {children}\n                </FadeInOnlyDiv>\n            }\n        </PoseGroup>\n    );\n};\n\nFadeWrapper.propTypes = {\n    children  : PropTypes.node,\n    is_visible: PropTypes.bool,\n    keyname   : PropTypes.string,\n    type      : PropTypes.string,\n};\n\nexport { FadeWrapper };\n","export * from './fade-wrapper.jsx';\n","module.exports = __webpack_public_path__ + \"public/images/app/contract_details/ic-exittime-won.svg\";","module.exports = __webpack_public_path__ + \"public/images/app/contract_details/ic-exittime-loss.svg\";","module.exports = __webpack_public_path__ + \"public/images/app/contract_details/dark/ic-barrier.svg\";","module.exports = __webpack_public_path__ + \"public/images/app/contract_details/dark/ic-duration.svg\";","module.exports = __webpack_public_path__ + \"public/images/app/contract_details/dark/ic-entryspot.svg\";","module.exports = __webpack_public_path__ + \"public/images/app/contract_details/dark/ic-exitspot.svg\";","module.exports = __webpack_public_path__ + \"public/images/app/contract_details/dark/ic-id.svg\";","module.exports = __webpack_public_path__ + \"public/images/app/contract_details/dark/ic-starttime.svg\";","module.exports = __webpack_public_path__ + \"public/images/app/contract_details/dark/ic-target.svg\";","module.exports = __webpack_public_path__ + \"public/images/app/contract_details/light/ic-barrier.svg\";","module.exports = __webpack_public_path__ + \"public/images/app/contract_details/light/ic-duration.svg\";","module.exports = __webpack_public_path__ + \"public/images/app/contract_details/light/ic-entryspot.svg\";","module.exports = __webpack_public_path__ + \"public/images/app/contract_details/light/ic-exitspot.svg\";","module.exports = __webpack_public_path__ + \"public/images/app/contract_details/light/ic-id.svg\";","module.exports = __webpack_public_path__ + \"public/images/app/contract_details/light/ic-starttime.svg\";","module.exports = __webpack_public_path__ + \"public/images/app/contract_details/light/ic-target.svg\";","import React              from 'react';\nimport IconBarrierDark    from 'Images/app/contract_details/dark/ic-barrier.svg';\nimport IconDurationDark   from 'Images/app/contract_details/dark/ic-duration.svg';\nimport IconEntrySpotDark  from 'Images/app/contract_details/dark/ic-entryspot.svg';\nimport IconExitSpotDark   from 'Images/app/contract_details/dark/ic-exitspot.svg';\nimport IconIdDark         from 'Images/app/contract_details/dark/ic-id.svg';\nimport IconStartDark      from 'Images/app/contract_details/dark/ic-starttime.svg';\nimport IconTargetDark     from 'Images/app/contract_details/dark/ic-target.svg';\nimport IconBarrierLight   from 'Images/app/contract_details/light/ic-barrier.svg';\nimport IconDurationLight  from 'Images/app/contract_details/light/ic-duration.svg';\nimport IconEntrySpotLight from 'Images/app/contract_details/light/ic-entryspot.svg';\nimport IconExitSpotLight  from 'Images/app/contract_details/light/ic-exitspot.svg';\nimport IconIdLight        from 'Images/app/contract_details/light/ic-id.svg';\nimport IconStartLight     from 'Images/app/contract_details/light/ic-starttime.svg';\nimport IconTargetLight    from 'Images/app/contract_details/light/ic-target.svg';\n\nexport const getThemedIcon = (type, is_dark_theme) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'id':\n                IconType = is_dark_theme ? <IconIdDark /> : <IconIdLight />;\n                break;\n            case 'duration':\n                IconType = is_dark_theme ? <IconDurationDark /> : <IconDurationLight />;\n                break;\n            case 'barrier':\n                IconType = is_dark_theme ? <IconBarrierDark /> : <IconBarrierLight />;\n                break;\n            case 'target':\n                IconType = is_dark_theme ? <IconTargetDark /> : <IconTargetLight />;\n                break;\n            case 'start_time':\n                IconType = is_dark_theme ? <IconStartDark /> : <IconStartLight />;\n                break;\n            case 'entry_spot':\n                IconType = is_dark_theme ? <IconEntrySpotDark /> : <IconEntrySpotLight />;\n                break;\n            case 'exit_spot':\n                IconType = is_dark_theme ? <IconExitSpotDark /> : <IconExitSpotLight />;\n                break;\n            default:\n                break;\n        }\n    }\n    if (!IconType) return null;\n    return IconType;\n};\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ContractAuditItem = ({\n    icon,\n    label,\n    value,\n    value2,\n}) => (\n    <React.Fragment>\n        {icon &&\n        <div className='contract-audit__icon'>\n            {icon}\n        </div>\n        }\n        <div className='contract-audit__item'>\n            <span className='contract-audit__label'>\n                {label}\n            </span>\n            <div className='contract-audit__value-wrapper'>\n                <span className='contract-audit__value'>\n                    {value}\n                </span>\n                {value2 &&\n                <span className='contract-audit__value2'>\n                    {value2}\n                </span>\n                }\n            </div>\n        </div>\n    </React.Fragment>\n);\n\nContractAuditItem.propTypes = {\n    icon : PropTypes.node,\n    label: PropTypes.string,\n    value: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value2: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default ContractAuditItem;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { Scrollbars }    from 'tt-react-custom-scrollbars';\nimport { localize }      from 'App/i18n';\nimport IconExitWon       from 'Images/app/contract_details/ic-exittime-won.svg';\nimport IconExitLoss      from 'Images/app/contract_details/ic-exittime-loss.svg';\nimport {\n    epochToMoment,\n    toGMTFormat }        from 'Utils/Date';\nimport {\n    addCommaToNumber,\n    getBarrierLabel,\n    getBarrierValue,\n    isDigitType }        from 'App/Components/Elements/PositionsDrawer/helpers';\nimport { getThemedIcon } from './Helpers/icons';\nimport ContractAuditItem from './contract-audit-item.jsx';\n\nclass ContractAudit extends React.PureComponent {\n    render() {\n        const {\n            contract_end_time,\n            contract_info,\n            duration,\n            duration_unit,\n            exit_spot,\n            has_result,\n            is_dark_theme,\n        } = this.props;\n        if (!has_result) return null;\n        const is_profit    = (contract_info.profit >= 0);\n        const IconExitTime = (is_profit) ? <IconExitWon /> : <IconExitLoss />;\n        return (\n            <React.Fragment>\n                <div className={classNames('contract-audit__wrapper', {\n                    'contract-audit__wrapper--is-open': !!(contract_info.is_sold),\n                })}\n                >\n                    <Scrollbars\n                        style={{ width: '100%', height: '100%' }}\n                        autoHide\n                    >\n                        <div className='contract-audit__grid'>\n                            <ContractAuditItem\n                                icon={getThemedIcon('id', is_dark_theme)}\n                                label={localize('Reference ID')}\n                                value={localize('{{value}} (Buy)', { value: contract_info.transaction_ids.buy })}\n                                value2={localize('{{value_two}} (Sell)', { value_two: contract_info.transaction_ids.sell })}\n                            />\n                        </div>\n                        <div className='contract-audit__grid'>\n                            <ContractAuditItem\n                                icon={getThemedIcon('duration', is_dark_theme)}\n                                label={localize('Duration')}\n                                value={(contract_info.tick_count > 0) ?\n                                    `${contract_info.tick_count} ${(contract_info.tick_count < 2) ? localize('tick') : localize('ticks')}`\n                                    :\n                                    `${duration} ${duration_unit}`}\n                            />\n                        </div>\n                        <div className='contract-audit__grid'>\n                            <ContractAuditItem\n                                icon={\n                                    isDigitType(contract_info.contract_type)\n                                        ? getThemedIcon('target', is_dark_theme)\n                                        : getThemedIcon('barrier', is_dark_theme)\n                                }\n                                label={getBarrierLabel(contract_info)}\n                                value={getBarrierValue(contract_info) || ' - '}\n                            />\n                        </div>\n                        <div className='contract-audit__grid'>\n                            <ContractAuditItem\n                                icon={getThemedIcon('start_time', is_dark_theme)}\n                                label={localize('Start time')}\n                                value={toGMTFormat(epochToMoment(contract_info.purchase_time)) || ' - '}\n                            />\n                        </div>\n                        {!isDigitType(contract_info.contract_type) &&\n                        <div className='contract-audit__grid'>\n                            <ContractAuditItem\n                                icon={getThemedIcon('entry_spot', is_dark_theme)}\n                                label={localize('Entry spot')}\n                                value={addCommaToNumber(contract_info.entry_spot) || ' - '}\n                                value2={toGMTFormat(epochToMoment(contract_info.entry_tick_time)) || ' - '}\n                            />\n                        </div>\n                        }\n                        {\n                            !isNaN(exit_spot) &&\n                            <div className='contract-audit__grid'>\n                                <ContractAuditItem\n                                    icon={getThemedIcon('exit_spot', is_dark_theme)}\n                                    label={localize('Exit spot')}\n                                    value={addCommaToNumber(exit_spot) || ' - '}\n                                    value2={toGMTFormat(epochToMoment(contract_info.exit_tick_time)) || ' - '}\n                                />\n                            </div>\n                        }\n                        <div className='contract-audit__grid'>\n                            <ContractAuditItem\n                                icon={IconExitTime}\n                                label={localize('Exit Time')}\n                                value={toGMTFormat(epochToMoment(contract_end_time)) || ' - '}\n                            />\n                        </div>\n                    </Scrollbars>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nContractAudit.propTypes = {\n    contract_end_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    contract_info: PropTypes.object,\n    duration     : PropTypes.number,\n    duration_unit: PropTypes.string,\n    exit_spot    : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    has_result   : PropTypes.bool,\n    is_dark_theme: PropTypes.bool,\n    is_open      : PropTypes.bool,\n};\n\nexport default ContractAudit;\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { isCryptocurrency } from '_common/base/currency_base';\nimport Localize             from 'App/Components/Elements/localize.jsx';\nimport Money                from 'App/Components/Elements/money.jsx';\nimport Icon                 from 'Assets/icon.jsx';\n\nconst ProfitLossCardContent = ({\n    currency,\n    is_sold,\n    pl_value,\n    payout,\n    status,\n}) => (\n    <div className='pl-card'>\n        <div className='pl-card__item'>\n            <div className='pl-card__item__header'>\n                { is_sold ? <Localize i18n_default_text='Profit/Loss:' /> : <Localize i18n_default_text='Potential profit/loss:' /> }\n            </div>\n            <div className={classNames(\n                'pl-card__item__body', {\n                    'pl-card__item__body--is-crypto': isCryptocurrency(currency),\n                    'pl-card__item__body--loss'     : +pl_value < 0,\n                    'pl-card__item__body--profit'   : +pl_value > 0,\n                })}\n            >\n                <Money currency={currency} has_sign={false} amount={pl_value} />\n                <div className={classNames(\n                    'pl-card__indicative--movement', {\n                        'pl-card__indicative--movement-complete': is_sold,\n                    },\n                )}\n                >\n                    <Icon\n                        icon='IconPriceMove'\n                        type={(!is_sold) ? status : null}\n                    />\n                </div>\n            </div>\n        </div>\n        <div className='pl-card__item-payout'>\n            <div className='pl-card__item__header'>\n                { is_sold ? <Localize i18n_default_text='Payout:' /> : <Localize i18n_default_text='Indicative price:' /> }\n            </div>\n            <div className='pl-card__item__body'>\n                <Money currency={currency} amount={payout} />\n                <div className={classNames(\n                    'pl-card__indicative--movement', {\n                        'pl-card__indicative--movement-complete': is_sold,\n                    },\n                )}\n                >\n                    <Icon\n                        icon='IconPriceMove'\n                        type={(!is_sold) ? status : null}\n                    />\n                </div>\n            </div>\n        </div>\n    </div>\n);\n\nProfitLossCardContent.propTypes = {\n    currency: PropTypes.string,\n    is_sold : PropTypes.bool,\n    payout  : PropTypes.number,\n    pl_value: PropTypes.number,\n    status  : PropTypes.string,\n};\nexport default ProfitLossCardContent;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ContractCardBody = ({ children }) => (\n    <div className='contract-card__body'>\n        {children}\n    </div>\n);\n\nContractCardBody.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]),\n};\n\nexport default ContractCardBody;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ContractCardFooter = ({ children }) => (\n    <div className='contract-card__footer'>\n        {children}\n    </div>\n);\n\nContractCardFooter.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.array,\n    ]),\n};\n\nexport default ContractCardFooter;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ContractCardHeader = ({ children }) => (\n    <div className='contract-card__header'>\n        {children}\n    </div>\n);\n\nContractCardHeader.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]),\n};\n\nexport default ContractCardHeader;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst ContractCard = ({ children, profit_loss, is_sold }) => (\n    <div className={classNames(\n        'contract-card', {\n            'contract-card--green': (profit_loss > 0) && !is_sold,\n            'contract-card--red'  : (profit_loss < 0) && !is_sold,\n        })}\n    >\n        {children}\n    </div>\n);\n\nContractCard.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.array,\n    ]),\n    is_sold    : PropTypes.bool,\n    profit_loss: PropTypes.number,\n};\n\nexport default ContractCard;\n","import classNames            from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React, { Component }  from 'react';\nimport { withRouter }        from 'react-router';\nimport { CSSTransition }     from 'react-transition-group';\nimport { localize }          from 'App/i18n';\nimport Icon                  from 'Assets/icon.jsx';\nimport routes                from 'Constants/routes';\nimport Localize              from 'App/Components/Elements/localize.jsx';\nimport { UnderlyingIcon }    from 'App/Components/Elements/underlying-icon.jsx';\nimport Button                from 'App/Components/Form/button.jsx';\nimport ContractAudit         from 'App/Components/Elements/ContractAudit';\nimport ContractTypeCell      from 'App/Components/Elements/PositionsDrawer/contract-type-cell.jsx';\nimport ProgressSlider        from 'App/Components/Elements/PositionsDrawer/ProgressSlider';\nimport { getTimePercentage } from 'App/Components/Elements/PositionsDrawer/helpers';\nimport ProfitLossCardContent from 'Modules/Reports/Components/profit-loss-card-content.jsx';\nimport ContractCardBody      from './contract-card-body.jsx';\nimport ContractCardFooter    from './contract-card-footer.jsx';\nimport ContractCardHeader    from './contract-card-header.jsx';\nimport ContractCard          from './contract-card.jsx';\n\nimport {\n    getCurrentTick,\n    getDurationPeriod,\n    getDurationTime,\n    getDurationUnitText }    from 'Stores/Modules/Portfolio/Helpers/details';\nimport {\n    getIndicativePrice,\n    getEndTime,\n    isUserSold,\n    isValidToSell       }    from 'Stores/Modules/Contract/Helpers/logic';\nimport Money                 from '../money.jsx';\n\nclass ContractDrawer extends Component {\n    state = {\n        is_shade_on: false,\n    };\n\n    handleShade = (shade) => {\n        this.setState({ is_shade_on: shade });\n    };\n\n    redirectBackToReports = () => {\n        // history.goBack() will go to the wrong location if user goes to contract by pasting it in the url.\n        if (this.props.history.location.state) {\n            this.props.history.goBack();\n        } else {\n            this.props.history.push(routes.reports);\n        }\n    };\n\n    getBodyContent () {\n        const {\n            buy_price,\n            currency,\n            exit_tick,\n            is_sold,\n            payout,\n            profit,\n        } = this.props.contract_info;\n        const { contract_info, is_dark_theme, is_sell_requested, onClickSell } = this.props;\n        const exit_spot = isUserSold(contract_info) ? '-' : exit_tick;\n        const percentage = getTimePercentage(\n            this.props.server_time,\n            contract_info.purchase_time,\n            contract_info.date_expiry,\n        );\n        const getTick = () => {\n            if (!contract_info.tick_count) return null;\n            let current_tick = getCurrentTick(contract_info);\n            current_tick = (current_tick > getCurrentTick(contract_info)) ?\n                current_tick : getCurrentTick(contract_info);\n            return current_tick;\n        };\n\n        return (\n            <React.Fragment>\n                <ContractCard\n                    contract_info={contract_info}\n                    profit_loss={+profit}\n                    is_sold={!!(is_sold)}\n                >\n                    <ContractCardHeader>\n                        <div className={classNames(\n                            'contract-card__grid',\n                            'contract-card__grid-underlying-trade'\n                        )}\n                        >\n                            <div className='contract-card__underlying-name'>\n                                <UnderlyingIcon market={contract_info.underlying} />\n                                <span className='contract-card__symbol'>\n                                    {contract_info.display_name}\n                                </span>\n                            </div>\n                            <div className='contract-card__type'>\n                                <ContractTypeCell type={contract_info.contract_type} />\n                            </div>\n                        </div>\n                    </ContractCardHeader>\n                    <ProgressSlider\n                        is_loading={false}\n                        remaining_time={contract_info.date_expiry}\n                        percentage={percentage}\n                        current_tick={getTick()}\n                        ticks_count={contract_info.tick_count}\n                        has_result={!!(is_sold)}\n                    />\n                    <ContractCardBody>\n                        <ProfitLossCardContent\n                            pl_value={+profit}\n                            payout={getIndicativePrice(contract_info)}\n                            currency={currency}\n                            is_sold={!!(is_sold)}\n                            status={this.props.status}\n                        />\n                    </ContractCardBody>\n                    <ContractCardFooter>\n                        <div className='contract-card__footer-wrapper'>\n                            <div className='purchase-price-container'>\n                                <span className='purchase-price__label'>\n                                    {localize('Purchase price:')}\n                                </span>\n                                <span className='purchase-price__value' >\n                                    <Money\n                                        currency={currency}\n                                        amount={buy_price}\n                                    />\n                                </span>\n                            </div>\n                            <div className='potential-payout-container'>\n                                <span className='potential-payout__label'>\n                                    {localize('Potential payout:')}\n                                </span>\n                                <span className='potential-payout-price__value' >\n                                    <Money\n                                        currency={currency}\n                                        amount={payout}\n                                    />\n                                </span>\n                            </div>\n                        </div>\n                        <CSSTransition\n                            in={!!(isValidToSell(contract_info))}\n                            timeout={250}\n                            classNames={{\n                                enter    : 'contract-card__sell-button--enter',\n                                enterDone: 'contract-card__sell-button--enter-done',\n                                exit     : 'contract-card__sell-button--exit',\n                            }}\n                            unmountOnExit\n                        >\n                            <div\n                                className='contract-card__sell-button'\n                            >\n                                <Button\n                                    className={classNames(\n                                        'btn--primary',\n                                        'btn--primary--green',\n                                        'btn--sell', {\n                                            'btn--loading': is_sell_requested,\n                                        })}\n                                    is_disabled={!(isValidToSell(contract_info)) || is_sell_requested}\n                                    text={localize('Sell contract')}\n                                    onClick={() => onClickSell(contract_info.contract_id)}\n                                />\n                            </div>\n                        </CSSTransition>\n                    </ContractCardFooter>\n                </ContractCard>\n                <ContractAudit\n                    contract_info={contract_info}\n                    contract_end_time={getEndTime(contract_info)}\n                    is_dark_theme={is_dark_theme}\n                    is_open={true}\n                    is_shade_visible={this.handleShade}\n                    duration={getDurationTime(contract_info)}\n                    duration_unit={getDurationUnitText(getDurationPeriod(contract_info))}\n                    exit_spot={exit_spot}\n                    has_result={!!(is_sold)}\n                />\n            </React.Fragment>\n        );\n    }\n\n    redirectBackToReports = () => {\n        // history.goBack() will go to the wrong location if user goes to contract by pasting it in the url.\n        if (this.props.history.location.state) {\n            this.props.history.goBack();\n        } else {\n            this.props.history.push(routes.reports);\n        }\n    };\n\n    render() {\n        if (!this.props.contract_info) return null;\n        const body_content = this.getBodyContent();\n        return (\n            <div className={classNames('contract-drawer', {})}>\n                <div\n                    className='contract-drawer__heading'\n                    onClick={this.redirectBackToReports}\n                >\n                    <Icon icon='IconBack' />\n                    <h2>{this.props.heading || <Localize i18n_default_text='Contract' />}</h2>\n                </div>\n                <div className='contract-drawer__body'>{body_content}</div>\n            </div>\n        );\n    }\n}\n\nContractDrawer.propTypes = {\n    contract_info    : PropTypes.object,\n    heading          : PropTypes.oneOfType([ PropTypes.node, PropTypes.string ]),\n    is_dark_theme    : PropTypes.bool,\n    is_sell_requested: PropTypes.bool,\n    onClickSell      : PropTypes.func,\n    server_time      : PropTypes.object,\n    status           : PropTypes.string,\n};\n\nexport default withRouter(ContractDrawer);\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { withRouter }       from 'react-router';\nimport { isEmptyObject }    from '_common/utility';\nimport { FadeWrapper }      from 'App/Components/Animations';\nimport ChartLoader          from 'App/Components/Elements/chart-loader.jsx';\nimport ContractDrawer       from 'App/Components/Elements/ContractDrawer';\nimport NotificationMessages from 'App/Containers/notification-messages.jsx';\nimport { connect }          from 'Stores/connect';\nimport Icon                 from 'Assets/icon.jsx';\nimport Localize             from 'App/Components/Elements/localize.jsx';\nimport AppRoutes            from 'Constants/routes';\nimport { localize }         from 'App/i18n';\nimport InfoBox              from './info-box.jsx';\nimport Digits               from './digits.jsx';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass ContractReplay extends React.Component {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    componentDidMount() {\n        this.props.hidePositions();\n        this.props.setChartLoader(true);\n        this.props.showBlur();\n        const url_contract_id = /[^/]*$/.exec(location.pathname)[0];\n        this.props.onMount(this.props.contract_id || url_contract_id);\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        // SmartCharts keeps saving layout for ContractReplay even if layouts prop is set to null\n        // As a result, we have to remove it manually for each SmartChart instance in ContractReplay\n        localStorage.removeItem('layout-contract-replay');\n        this.props.hideBlur();\n        this.props.onUnmount();\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            const classname_string = event.target.classList[0];\n            if (/^.*(modal|btn|notification)/.test(classname_string)) {\n                return;\n            }\n            this.props.history.push(AppRoutes.trade);\n        }\n    };\n\n    render() {\n        const action_bar_items = [\n            {\n                onClick: () => this.props.history.push(AppRoutes.trade),\n                icon   : 'SettingsIconClose',\n                title  : localize('Close'),\n            },\n        ];\n\n        const {\n            config,\n            contract_info,\n            chart_id,\n            is_chart_loading,\n            is_dark_theme,\n            is_sell_requested,\n            is_static_chart,\n            onClickSell,\n            server_time,\n            status,\n        } = this.props;\n\n        return (\n            <div className='trade-container__replay' ref={this.setWrapperRef}>\n                <FadeWrapper\n                    className='contract-drawer-wrapper'\n                    is_visible={!!(contract_info.status)}\n                    keyname='contract-drawer-wrapper'\n                >\n\n                    <ContractDrawer\n                        contract_info={contract_info}\n                        heading={<Localize i18n_default_text='Reports' />}\n                        is_dark_theme={is_dark_theme}\n                        is_sell_requested={is_sell_requested}\n                        onClickSell={onClickSell}\n                        status={status}\n                        server_time={server_time}\n                    />\n                </FadeWrapper>\n                <React.Suspense fallback={<div />}>\n                    <div className='replay-chart__container'>\n                        <div className='vertical-tab__action-bar'>\n                            {\n                                action_bar_items.map(({ icon, onClick, title }) => (\n                                    <Icon\n                                        className='vertical-tab__action-bar--icon'\n                                        key={title}\n                                        icon={icon}\n                                        onClick={onClick}\n                                    />\n                                ))\n                            }\n                        </div>\n                        <NotificationMessages />\n                        <ChartLoader is_visible={is_chart_loading} />\n                        {(!!(contract_info.underlying) && !isEmptyObject(config)) &&\n                        <SmartChart\n                            chart_id={chart_id}\n                            chartControlsWidgets={null}\n                            Digits={<Digits />}\n                            InfoBox={<InfoBox />}\n                            is_static_chart={is_static_chart}\n                            should_show_last_digit_stats={false}\n                            symbol={contract_info.underlying}\n                            {...config}\n                        />\n                        }\n                    </div>\n                </React.Suspense>\n            </div>\n        );\n    }\n}\n\nContractReplay.propTypes = {\n    chart_id        : PropTypes.string,\n    config          : PropTypes.object,\n    contract_id     : PropTypes.string,\n    contract_info   : PropTypes.object,\n    hideBlur        : PropTypes.func,\n    hidePositions   : PropTypes.func,\n    history         : PropTypes.object,\n    is_chart_loading: PropTypes.bool,\n    is_dark_theme   : PropTypes.bool,\n    is_static_chart : PropTypes.bool,\n    location        : PropTypes.object,\n    onMount         : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    routes          : PropTypes.arrayOf(PropTypes.object),\n    server_time     : PropTypes.object,\n    setChartLoader  : PropTypes.func,\n    showBlur        : PropTypes.func,\n    status          : PropTypes.string,\n};\n\nexport default withRouter(connect(\n    ({ common, modules, ui }) => ({\n        server_time      : common.server_time,\n        chart_id         : modules.smart_chart.replay_id,\n        config           : modules.contract.replay_config,\n        is_sell_requested: modules.contract.is_sell_requested,\n        is_static_chart  : modules.contract.is_replay_static_chart,\n        onClickSell      : modules.contract.onClickSell,\n        onMount          : modules.contract.onMountReplay,\n        onUnmount        : modules.contract.onUnmountReplay,\n        contract_info    : modules.contract.replay_info,\n        status           : modules.contract.replay_indicative_status,\n        is_chart_loading : modules.smart_chart.is_chart_loading,\n        setChartLoader   : modules.smart_chart.setIsChartLoading,\n        hidePositions    : ui.hidePositionsFooterToggle,\n        hideBlur         : ui.hideRouteBlur,\n        is_dark_theme    : ui.is_dark_mode_on,\n        showBlur         : ui.showRouteBlur,\n\n    })\n)(ContractReplay));\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { withRouter }    from 'react-router';\nimport { CSSTransition } from 'react-transition-group';\nimport routes            from 'Constants/routes';\nimport ErrorComponent    from 'App/Components/Elements/Errors';\nimport Localize          from 'App/Components/Elements/localize.jsx';\nimport { connect }       from 'Stores/connect';\nimport ContractReplay    from './contract-replay.jsx';\n\nclass Contract extends React.Component {\n    componentWillUnmount() {\n        if (this.props.has_error) this.props.clearError();\n    }\n\n    render () {\n        return (\n            <React.Fragment>\n                {\n                    this.props.has_error ?\n                        <ErrorComponent\n                            message={this.props.error_message}\n                            redirect_label={<Localize i18n_default_text='Go back to trading' />}\n                            redirectOnClick={() => this.props.history.push(routes.trade)}\n                            should_show_refresh={false}\n                        />\n                        :\n                        <CSSTransition\n                            in={!this.props.has_error}\n                            timeout={400}\n                            classNames={{\n                                enter    : 'contract--enter',\n                                enterDone: 'contract--enter-done',\n                                exit     : 'contract--exit',\n                            }}\n                            unmountOnExit\n                        >\n                            <ContractReplay\n                                contract_id={this.props.match.params.contract_id}\n                                key={this.props.match.params.contract_id}\n                            />\n                        </CSSTransition>\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nContract.propTypes = {\n    clearError   : PropTypes.func,\n    error_message: PropTypes.string,\n    has_error    : PropTypes.bool,\n    history      : PropTypes.object,\n    is_mobile    : PropTypes.bool,\n    match        : PropTypes.object,\n    symbol       : PropTypes.string,\n};\n\nexport default withRouter(connect(\n    ({ modules, ui }) => ({\n        clearError   : modules.contract.clearError,\n        error_message: modules.contract.error_message,\n        has_error    : modules.contract.has_error,\n        is_mobile    : ui.is_mobile,\n        symbol       : modules.contract.contract_info.underlying,\n    }),\n)(Contract));\n"],"sourceRoot":""}