{"version":3,"sources":["webpack:///./Modules/Portfolio/Components/indicative-cell.jsx","webpack:///./App/Components/Elements/DataTable/table-cell.jsx","webpack:///./App/Components/Elements/DataTable/table-row-info.jsx","webpack:///./App/Components/Elements/DataTable/table-row.jsx","webpack:///./App/Components/Elements/DataTable/data-table.jsx","webpack:///./Modules/Portfolio/Components/portfolio-card.jsx","webpack:///./Modules/Portfolio/Components/card-list.jsx","webpack:///./Modules/Portfolio/Components/contract-type-cell.jsx","webpack:///./Modules/Portfolio/Constants/data-table-constants.js","webpack:///./Modules/Portfolio/Containers/portfolio.jsx"],"names":["prop_types__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","n","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","App_i18n__WEBPACK_IMPORTED_MODULE_2__","App_Components_Elements_money_jsx__WEBPACK_IMPORTED_MODULE_3__","IndicativeCell","_ref","amount","currency","status","status_class_name","concat","undefined","a","createElement","className","localize","propTypes","PropTypes","number","string","TableCell","col_index","children","react_default","classNames","oneOfType","node","TableRowInfo","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","toggleDetails","replace","setState","state","showDetails","React","Component","onClick","is_footer","statement__row--detail","component","message","cells","arrayOf","object","TableRow","columns","is_header","_ref$row_obj","row_obj","to","map","_ref2","renderCellContent","title","key","cell_content","cell_value","table_cell","row_class_name","table__row-link","react_router_dom","pathname","from_table_row","table_row_info_TableRowInfo","array","bool","DataTable","data_table_classCallCheck","data_table_possibleConstructorReturn","data_table_getPrototypeOf","height","PureComponent","el_table_body","clientHeight","alignHeader","data_source","length","first_body_row","firstChild","scrollbar_offset","el_table_head","offsetWidth","style","paddingRight","_classNames","_this2","_this$props","footer","getRowAction","is_empty","onScroll","TableData","Fragment","id","action","table_row","data_table_typeof","data_table_defineProperty","ref","el","lib","autoHeight","autoHeightMax","autoHide","MobxPropTypes","arrayOrObservableArray","func","PortfolioCard","details","expiry_time","indicative","payout","purchase","reference","activeClassName","getContractPath","remaining_time","end_time","money","CardList","data","portfolio_position","portfolio_card","_extends","ContractTypeCell","type","icon","toLowerCase","getContractTypeDisplay","getTableColumnsTemplate","contract_type_cell","_ref3","_ref4","_ref5","_ref6","indicative_cell","Portfolio","onMount","onUnmount","active_positions","is_mobile","is_tablet","is_loading","error","totals","loading","empty_portfolio_message","should_show_cards","classnames","portfolio--card-view","card_list","has_fixed_header","history","connect","modules","client","ui","portfolio","withRouter"],"mappings":"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","file":"js/portfolio.dde012a2d15771577575.js","sourcesContent":["import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst IndicativeCell = ({ amount, currency, status }) => {\n    const status_class_name = status\n        ? `indicative--${status}`\n        : undefined;\n\n    return (\n        <div className={status_class_name}>\n            <Money amount={amount} currency={currency} />\n\n            {status === 'no-resale' &&\n                <div className='indicative__no-resale-msg'>\n                    {localize('Resale not offered')}\n                </div>\n            }\n        </div>\n    );\n};\n\nIndicativeCell.propTypes = {\n    amount  : PropTypes.number,\n    currency: PropTypes.string,\n    status  : PropTypes.string,\n};\n\nexport default IndicativeCell;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst TableCell = ({ col_index, children }) => (\n    <div className={classNames('table__cell', col_index)}>\n        {children}\n    </div>\n);\n\nTableCell.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.string,\n    ]),\n    col_index: PropTypes.string,\n};\n\nexport default TableCell;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nexport default class TableRowInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showDetails: false,\n        };\n    }\n\n    toggleDetails = () => {\n        if (this.props.replace) {\n            this.setState(state => ({ showDetails: !state.showDetails }));\n        }\n    };\n\n    render() {\n        return (\n            <div\n                onClick={this.props.is_footer || !this.props.replace ? undefined : this.toggleDetails}\n                className={classNames(this.props.className, { 'statement__row--detail': this.state.showDetails })}\n            >\n                {\n                    this.state.showDetails ?\n                        <div>\n                            {this.props.replace.component ?\n                                this.props.replace.component\n                                :\n                                <p>{this.props.replace.message}</p>\n                            }\n                        </div>\n                        : this.props.cells\n                }\n            </div>\n        );\n    }\n}\n\nTableRowInfo.propTypes = {\n    cells    : PropTypes.arrayOf(PropTypes.node),\n    className: PropTypes.string,\n    replace  : PropTypes.object,\n};\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { NavLink }  from 'react-router-dom';\nimport TableCell    from './table-cell.jsx';\nimport TableRowInfo from './table-row-info.jsx';\n\nconst TableRow = ({\n    className,\n    columns,\n    is_footer,\n    is_header,\n    replace,\n    row_obj = {},\n    to,\n}) => {\n    const cells = columns.map(({ col_index, renderCellContent, title, key }) => {\n        let cell_content = title;\n        if (!is_header) {\n            const cell_value = row_obj[col_index] || '';\n            cell_content = renderCellContent\n                ? renderCellContent({ cell_value, col_index, row_obj, is_footer })\n                : cell_value;\n        }\n\n        return (\n            <TableCell col_index={col_index} key={key || col_index}>\n                {cell_content}\n            </TableCell>\n        );\n    });\n\n    const row_class_name = classNames('table__row', { 'table__row-link': to || replace }, { [`${className}__row`]: className });\n\n    return (\n        to ?\n            <NavLink\n                className={row_class_name}\n                to={{\n                    pathname: to,\n                    state   : {\n                        from_table_row: true,\n                    },\n                }}\n            >\n                {cells}\n            </NavLink>\n            :\n            <TableRowInfo\n                className={row_class_name}\n                cells={cells}\n                replace={replace}\n                is_footer={is_footer}\n            />\n    );\n};\n\nTableRow.propTypes = {\n    className: PropTypes.string,\n    columns  : PropTypes.array,\n    is_footer: PropTypes.bool,\n    is_header: PropTypes.bool,\n    replace  : PropTypes.object,\n    row_obj  : PropTypes.object,\n    to       : PropTypes.string,\n};\n\nexport default TableRow;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport TableRow                       from './table-row.jsx';\n\n/* TODO:\n      1. implement sorting by column (ASC/DESC)\n      2. implement filtering per column\n*/\n\nclass DataTable extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            height: 200,\n        };\n    }\n\n    componentDidMount() {\n        this.setState({\n            height: this.el_table_body.clientHeight,\n        });\n    }\n\n    componentDidUpdate() {\n        this.alignHeader();\n    }\n\n    alignHeader() {\n        // scrollbar inside table-body can push content (depending on the browser and if mouse is plugged in)\n        if (!this.props.data_source.length) return;\n        const first_body_row   = this.el_table_body.firstChild;\n        const scrollbar_offset = this.el_table_head.offsetWidth - first_body_row.offsetWidth;\n        this.el_table_head.style.paddingRight = `${scrollbar_offset}px`;\n    }\n\n    render() {\n        const {\n            children,\n            className,\n            columns,\n            data_source,\n            footer,\n            getRowAction,\n            is_empty,\n            onScroll,\n        } = this.props;\n\n        const TableData =\n            <React.Fragment>\n                {data_source.map((row_obj, id) => {\n                    const action = getRowAction && getRowAction(row_obj);\n\n                    return (\n                        <TableRow\n                            className={className}\n                            row_obj={row_obj}\n                            columns={columns}\n                            key={id}\n                            to={typeof action === 'string' ? action : undefined}\n                            replace={typeof action === 'object' ? action : undefined}\n                        />\n                    );\n                }\n                )}\n                {children}\n            </React.Fragment>;\n\n        return (\n            <div className={classNames('table', {\n                [`${className}`]         : className,\n                [`${className}__table`]  : className,\n                [`${className}__content`]: className,\n            })}\n            >\n                <div className='table__head' ref={el => { this.el_table_head = el; }}>\n                    <TableRow className={className} columns={columns} is_header />\n                </div>\n                <div\n                    className='table__body'\n                    onScroll={onScroll}\n                    ref={el => { this.el_table_body = el; }}\n                >\n                    {is_empty ?\n                        TableData\n                        :\n                        <Scrollbars\n                            autoHeight\n                            autoHeightMax={this.state.height}\n                            autoHide\n                        >\n                            {TableData}\n                        </Scrollbars>\n                    }\n                </div>\n\n                {footer &&\n                    <div className='table__foot'>\n                        <TableRow\n                            className={className}\n                            row_obj={footer}\n                            columns={columns}\n                            is_footer\n                        />\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nDataTable.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.arrayOf(PropTypes.node),\n    ]),\n    className   : PropTypes.string,\n    columns     : PropTypes.array,\n    data_source : MobxPropTypes.arrayOrObservableArray,\n    footer      : PropTypes.object,\n    getRowAction: PropTypes.func,\n    onScroll    : PropTypes.func,\n};\n\nexport default DataTable;\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { NavLink }         from 'react-router-dom';\nimport Money               from 'App/Components/Elements/money.jsx';\nimport { getContractPath } from 'App/Components/Routes/helpers';\nimport RemainingTime       from 'App/Containers/remaining-time.jsx';\n\nconst PortfolioCard = ({\n    currency,\n    details,\n    expiry_time,\n    id,\n    indicative,\n    payout,\n    purchase,\n    reference,\n    status,\n}) => (\n    <NavLink\n        className='portfolio-card card-list__card card-list__card-link'\n        activeClassName='active'\n        to={getContractPath(id)}\n    >\n        <div className='portfolio-card__header'>\n            <span className='portfolio-card__date'>\n                <RemainingTime end_time={expiry_time} />\n            </span>\n            <span className='portfolio-card__refid'>\n                {reference}\n            </span>\n        </div>\n        <div className='portfolio-card__body'>\n            <div className='portfolio-card__desc'>{details}</div>\n            <div className='portfolio-card__row'>\n                <div className='portfolio-card__cell portfolio-card__purchase'>\n                    <span className='portfolio-card__cell-text'>\n                        <Money amount={purchase} currency={currency} />\n                    </span>\n                </div>\n                <div className='portfolio-card__cell portfolio-card__payout'>\n                    <span className='portfolio-card__cell-text'>\n                        <Money amount={payout} currency={currency} />\n                    </span>\n                </div>\n                <div className={`portfolio-card__cell portfolio-card__indicative portfolio-card__indicative--${status}`}>\n                    <span className='portfolio-card__cell-text'>\n                        <Money amount={indicative} currency={currency} />\n                    </span>\n                </div>\n            </div>\n        </div>\n    </NavLink>\n);\n\nPortfolioCard.propTypes = {\n    currency   : PropTypes.string,\n    details    : PropTypes.string,\n    expiry_time: PropTypes.number,\n    id         : PropTypes.number,\n    indicative : PropTypes.number,\n    payout     : PropTypes.number,\n    purchase   : PropTypes.number,\n    reference  : PropTypes.number,\n    status     : PropTypes.string,\n};\n\nexport default PortfolioCard;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport React                          from 'react';\nimport PropTypes                      from 'prop-types';\nimport PortfolioCard                  from './portfolio-card.jsx';\n\nconst CardList = ({ data, currency }) => (\n    <div className='card-list'>\n        {\n            data.map((portfolio_position, id) => (\n                <PortfolioCard\n                    key={id}\n                    {...portfolio_position}\n                    currency={currency}\n                />\n            ))\n        }\n    </div>\n);\n\nCardList.propTypes = {\n    currency: PropTypes.string,\n    data    : MobxPropTypes.arrayOrObservableArray,\n};\n\nexport default CardList;\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport Icon                       from 'Assets/icon.jsx';\n\nconst ContractTypeCell = ({ type }) => (\n    <div className='contract-type'>\n        <div className='type-wrapper'>\n            <Icon icon='IconTradeType' type={type.toLowerCase()} className='type' />\n        </div>\n        <span>\n            {type && getContractTypeDisplay(type) || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","import React            from 'react';\nimport { localize }     from 'App/i18n';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining-time.jsx';\nimport ContractTypeCell from '../Components/contract-type-cell.jsx';\nimport IndicativeCell   from '../Components/indicative-cell.jsx';\n\n/* eslint-disable react/display-name, react/prop-types */\nexport const getTableColumnsTemplate = (currency) => [\n    {\n        title            : localize('Reference No.'),\n        col_index        : 'reference',\n        renderCellContent: ({ cell_value, is_footer }) => (\n            is_footer ? localize('Total') : cell_value\n        ),\n    },\n    {\n        title            : localize('Contract Type'),\n        col_index        : 'type',\n        renderCellContent: ({ cell_value, is_footer }) => {\n            if (is_footer) return '';\n            return <ContractTypeCell type={cell_value} />;\n        },\n    },\n    {\n        title    : localize('Contract Details'),\n        col_index: 'details',\n    },\n    {\n        title            : localize('Remaining Time'),\n        col_index        : 'expiry_time',\n        renderCellContent: ({ cell_value, is_footer }) => is_footer ? '' : <RemainingTime end_time={cell_value} />,\n    },\n    {\n        title            : localize('Potential Payout'),\n        col_index        : 'payout',\n        renderCellContent: ({ cell_value }) => (\n            <Money amount={cell_value} currency={currency} />\n        ),\n    },\n    {\n        title            : localize('Purchase'),\n        col_index        : 'purchase',\n        renderCellContent: ({ cell_value }) => (\n            <Money amount={cell_value} currency={currency} />\n        ),\n    },\n    {\n        title            : localize('Indicative'),\n        col_index        : 'indicative',\n        renderCellContent: ({ cell_value, row_obj }) => (\n            <IndicativeCell amount={+cell_value} currency={currency} status={row_obj.status} />\n        ),\n    },\n];\n/* eslint-enable react/display-name, react/prop-types */\n","import classnames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router-dom';\nimport DataTable                      from 'App/Components/Elements/DataTable';\nimport { getContractPath }            from 'App/Components/Routes/helpers';\nimport { connect }                    from 'Stores/connect';\nimport CardList                       from '../Components/card-list.jsx';\nimport EmptyPortfolioMessage          from '../Components/empty-portfolio-message.jsx';\nimport { getTableColumnsTemplate }    from '../Constants/data-table-constants';\nimport Loading                        from '../../../templates/_common/components/loading.jsx';\n\nclass Portfolio extends React.Component {\n    componentDidMount()    { this.props.onMount(); }\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            active_positions,\n            is_mobile,\n            is_tablet,\n            is_loading,\n            error,\n            totals,\n            is_empty,\n            currency,\n        } = this.props;\n\n        if (error) {\n            return <p>{error}</p>;\n        }\n\n        if (is_loading) {\n            return <Loading />;\n        }\n\n        if (is_empty) {\n            return <EmptyPortfolioMessage />;\n        }\n\n        const should_show_cards = is_mobile || is_tablet;\n\n        return (\n            <div className={classnames('portfolio container', { 'portfolio--card-view': should_show_cards })}>\n                {\n                    should_show_cards ?\n                        <CardList data={active_positions} currency={currency} />\n                        :\n                        <DataTable\n                            className='portfolio'\n                            columns={getTableColumnsTemplate(currency)}\n                            data_source={active_positions}\n                            footer={totals}\n                            has_fixed_header\n                            getRowAction={(row_obj) => getContractPath(row_obj.id)}\n                        />\n                }\n            </div>\n        );\n    }\n}\n\nPortfolio.propTypes = {\n    active_positions: MobxPropTypes.arrayOrObservableArray,\n    currency        : PropTypes.string,\n    error           : PropTypes.string,\n    history         : PropTypes.object,\n    is_empty        : PropTypes.bool,\n    is_loading      : PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_tablet       : PropTypes.bool,\n    onMount         : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    totals          : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        currency        : client.currency,\n        active_positions: modules.portfolio.active_positions,\n        error           : modules.portfolio.error,\n        is_empty        : modules.portfolio.is_empty,\n        is_loading      : modules.portfolio.is_loading,\n        totals          : modules.portfolio.totals,\n        onMount         : modules.portfolio.onMount,\n        onUnmount       : modules.portfolio.onUnmount,\n        is_mobile       : ui.is_mobile,\n        is_tablet       : ui.is_tablet,\n    })\n)(withRouter(Portfolio));\n"],"sourceRoot":""}