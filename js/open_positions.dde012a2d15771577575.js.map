{"version":3,"sources":["webpack:///./Modules/Portfolio/Components/indicative-cell.jsx","webpack:///./Modules/Reports/Helpers/market-underyling.js","webpack:///./App/Components/Elements/DataTable/table-cell.jsx","webpack:///./App/Components/Elements/DataTable/table-row-info.jsx","webpack:///./App/Components/Elements/DataTable/table-row.jsx","webpack:///./App/Components/Elements/DataTable/data-table.jsx","webpack:///./Modules/Reports/Components/empty-trade-history-message.jsx","webpack:///./Modules/Reports/Components/reports-meta.jsx","webpack:///./Modules/Reports/Components/placeholder-component.jsx","webpack:///./App/Components/Elements/Label/label.jsx","webpack:///./App/Containers/ProgressSliderStream/progress-slider-stream.jsx","webpack:///./Modules/Reports/Helpers/profit-loss.js","webpack:///./Modules/Reports/Components/market-symbol-icon-row.jsx","webpack:///./Modules/Reports/Components/profit_loss_cell.jsx","webpack:///./Modules/Reports/Constants/data-table-constants.js","webpack:///./Modules/Reports/Containers/open-positions.jsx"],"names":["prop_types__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","n","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","App_i18n__WEBPACK_IMPORTED_MODULE_2__","App_Components_Elements_money_jsx__WEBPACK_IMPORTED_MODULE_3__","IndicativeCell","_ref","amount","currency","status","status_class_name","concat","undefined","a","createElement","className","localize","propTypes","PropTypes","number","string","d","__webpack_exports__","getMarketInformation","payload","market_info","category","underlying","extracted","RegExp","exec","shortcode","toLowerCase","TableCell","col_index","children","react_default","classNames","oneOfType","node","TableRowInfo","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","toggleDetails","replace","setState","state","showDetails","React","Component","onClick","is_footer","statement__row--detail","component","message","cells","arrayOf","object","TableRow","columns","is_header","_ref$row_obj","row_obj","to","map","_ref2","renderCellContent","title","key","cell_content","cell_value","table_cell","row_class_name","table__row-link","react_router_dom","pathname","from_table_row","table_row_info_TableRowInfo","array","bool","DataTable","data_table_classCallCheck","data_table_possibleConstructorReturn","data_table_getPrototypeOf","height","PureComponent","el_table_body","clientHeight","alignHeader","data_source","length","first_body_row","firstChild","scrollbar_offset","el_table_head","offsetWidth","style","paddingRight","_classNames","_this2","_this$props","footer","getRowAction","is_empty","onScroll","TableData","Fragment","id","action","table_row","data_table_typeof","data_table_defineProperty","ref","el","lib","autoHeight","autoHeightMax","autoHide","MobxPropTypes","arrayOrObservableArray","func","Assets_icon_jsx__WEBPACK_IMPORTED_MODULE_2__","EmptyTradeHistoryMessage","has_selected_date","component_icon","localized_message","localized_period_message","icon","ReportsMeta","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","i18n_heading","i18n_message","_templates_common_components_loading_jsx__WEBPACK_IMPORTED_MODULE_2__","PlaceholderComponent","EmptyMessageComponent","empty_message_component","is_loading","available_modes","Label","mode","type","some","m","oneOf","ProgressSliderStream","getPositionById","server_time","position","contract_info","percentage","getTimePercentage","purchase_time","date_expiry","positions_progress_slider","remaining_time","has_result","current_tick","ticks_count","connect","modules","common","portfolio","getProfitOrLoss","value","MarketSymbolIconRow","show_description","should_show_category_icon","market_information","underlying_icon","market","display_name","includes","action_type","width","ProfitLossCell","data_table_constants_getStatementTableColumnsTemplate","data_table_constants_getProfitTableColumnsTemplate","data_table_constants_getOpenPositionsColumnsTemplate","getStatementTableColumnsTemplate","market_symbol_icon_row","transaction_id","label","deposit","withdrawal","sell","buy","default","Object","keys","find","x","_ref3","money","has_sign","_ref4","getProfitTableColumnsTemplate","_ref5","_ref6","_ref7","_ref8","profit_loss_cell","getOpenPositionsColumnsTemplate","_ref9","_ref10","_ref11","_ref12","indicative_cell","_ref13","progress_slider_stream","OpenPositions","is_unsupported","react__WEBPACK_IMPORTED_MODULE_2___default","App_Components_Elements_localize_jsx__WEBPACK_IMPORTED_MODULE_7__","i18n_default_text","values","website_name","components","rel","target","href","urlFor","getContractPath","onMount","onUnmount","active_positions","error","totals","Modules_Reports_Components_reports_meta_jsx__WEBPACK_IMPORTED_MODULE_11__","Modules_Reports_Components_placeholder_component_jsx__WEBPACK_IMPORTED_MODULE_13__","App_Components_Elements_DataTable__WEBPACK_IMPORTED_MODULE_6__","history","is_mobile","is_tablet","client","is_active_empty","active_positions_totals","withRouter"],"mappings":"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","file":"js/open_positions.dde012a2d15771577575.js","sourcesContent":["import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst IndicativeCell = ({ amount, currency, status }) => {\n    const status_class_name = status\n        ? `indicative--${status}`\n        : undefined;\n\n    return (\n        <div className={status_class_name}>\n            <Money amount={amount} currency={currency} />\n\n            {status === 'no-resale' &&\n                <div className='indicative__no-resale-msg'>\n                    {localize('Resale not offered')}\n                </div>\n            }\n        </div>\n    );\n};\n\nIndicativeCell.propTypes = {\n    amount  : PropTypes.number,\n    currency: PropTypes.string,\n    status  : PropTypes.string,\n};\n\nexport default IndicativeCell;\n","export const getMarketInformation = (payload) => {\n    const market_info = {\n        category  : '',\n        underlying: '',\n    };\n\n    const pattern = new RegExp('^([A-Z]+)_((OTC_[A-Z0-9]+)|R_[\\\\d]{2,3}|[A-Z]+)_'); // Used to get market name from shortcode\n    const extracted = pattern.exec(payload.shortcode);\n    if (extracted !== null) {\n        market_info.category   = extracted[1].toLowerCase();\n        market_info.underlying = extracted[2];\n    }\n\n    return market_info;\n};\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst TableCell = ({ col_index, children }) => (\n    <div className={classNames('table__cell', col_index)}>\n        {children}\n    </div>\n);\n\nTableCell.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.string,\n    ]),\n    col_index: PropTypes.string,\n};\n\nexport default TableCell;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nexport default class TableRowInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showDetails: false,\n        };\n    }\n\n    toggleDetails = () => {\n        if (this.props.replace) {\n            this.setState(state => ({ showDetails: !state.showDetails }));\n        }\n    };\n\n    render() {\n        return (\n            <div\n                onClick={this.props.is_footer || !this.props.replace ? undefined : this.toggleDetails}\n                className={classNames(this.props.className, { 'statement__row--detail': this.state.showDetails })}\n            >\n                {\n                    this.state.showDetails ?\n                        <div>\n                            {this.props.replace.component ?\n                                this.props.replace.component\n                                :\n                                <p>{this.props.replace.message}</p>\n                            }\n                        </div>\n                        : this.props.cells\n                }\n            </div>\n        );\n    }\n}\n\nTableRowInfo.propTypes = {\n    cells    : PropTypes.arrayOf(PropTypes.node),\n    className: PropTypes.string,\n    replace  : PropTypes.object,\n};\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { NavLink }  from 'react-router-dom';\nimport TableCell    from './table-cell.jsx';\nimport TableRowInfo from './table-row-info.jsx';\n\nconst TableRow = ({\n    className,\n    columns,\n    is_footer,\n    is_header,\n    replace,\n    row_obj = {},\n    to,\n}) => {\n    const cells = columns.map(({ col_index, renderCellContent, title, key }) => {\n        let cell_content = title;\n        if (!is_header) {\n            const cell_value = row_obj[col_index] || '';\n            cell_content = renderCellContent\n                ? renderCellContent({ cell_value, col_index, row_obj, is_footer })\n                : cell_value;\n        }\n\n        return (\n            <TableCell col_index={col_index} key={key || col_index}>\n                {cell_content}\n            </TableCell>\n        );\n    });\n\n    const row_class_name = classNames('table__row', { 'table__row-link': to || replace }, { [`${className}__row`]: className });\n\n    return (\n        to ?\n            <NavLink\n                className={row_class_name}\n                to={{\n                    pathname: to,\n                    state   : {\n                        from_table_row: true,\n                    },\n                }}\n            >\n                {cells}\n            </NavLink>\n            :\n            <TableRowInfo\n                className={row_class_name}\n                cells={cells}\n                replace={replace}\n                is_footer={is_footer}\n            />\n    );\n};\n\nTableRow.propTypes = {\n    className: PropTypes.string,\n    columns  : PropTypes.array,\n    is_footer: PropTypes.bool,\n    is_header: PropTypes.bool,\n    replace  : PropTypes.object,\n    row_obj  : PropTypes.object,\n    to       : PropTypes.string,\n};\n\nexport default TableRow;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport TableRow                       from './table-row.jsx';\n\n/* TODO:\n      1. implement sorting by column (ASC/DESC)\n      2. implement filtering per column\n*/\n\nclass DataTable extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            height: 200,\n        };\n    }\n\n    componentDidMount() {\n        this.setState({\n            height: this.el_table_body.clientHeight,\n        });\n    }\n\n    componentDidUpdate() {\n        this.alignHeader();\n    }\n\n    alignHeader() {\n        // scrollbar inside table-body can push content (depending on the browser and if mouse is plugged in)\n        if (!this.props.data_source.length) return;\n        const first_body_row   = this.el_table_body.firstChild;\n        const scrollbar_offset = this.el_table_head.offsetWidth - first_body_row.offsetWidth;\n        this.el_table_head.style.paddingRight = `${scrollbar_offset}px`;\n    }\n\n    render() {\n        const {\n            children,\n            className,\n            columns,\n            data_source,\n            footer,\n            getRowAction,\n            is_empty,\n            onScroll,\n        } = this.props;\n\n        const TableData =\n            <React.Fragment>\n                {data_source.map((row_obj, id) => {\n                    const action = getRowAction && getRowAction(row_obj);\n\n                    return (\n                        <TableRow\n                            className={className}\n                            row_obj={row_obj}\n                            columns={columns}\n                            key={id}\n                            to={typeof action === 'string' ? action : undefined}\n                            replace={typeof action === 'object' ? action : undefined}\n                        />\n                    );\n                }\n                )}\n                {children}\n            </React.Fragment>;\n\n        return (\n            <div className={classNames('table', {\n                [`${className}`]         : className,\n                [`${className}__table`]  : className,\n                [`${className}__content`]: className,\n            })}\n            >\n                <div className='table__head' ref={el => { this.el_table_head = el; }}>\n                    <TableRow className={className} columns={columns} is_header />\n                </div>\n                <div\n                    className='table__body'\n                    onScroll={onScroll}\n                    ref={el => { this.el_table_body = el; }}\n                >\n                    {is_empty ?\n                        TableData\n                        :\n                        <Scrollbars\n                            autoHeight\n                            autoHeightMax={this.state.height}\n                            autoHide\n                        >\n                            {TableData}\n                        </Scrollbars>\n                    }\n                </div>\n\n                {footer &&\n                    <div className='table__foot'>\n                        <TableRow\n                            className={className}\n                            row_obj={footer}\n                            columns={columns}\n                            is_footer\n                        />\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nDataTable.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.arrayOf(PropTypes.node),\n    ]),\n    className   : PropTypes.string,\n    columns     : PropTypes.array,\n    data_source : MobxPropTypes.arrayOrObservableArray,\n    footer      : PropTypes.object,\n    getRowAction: PropTypes.func,\n    onScroll    : PropTypes.func,\n};\n\nexport default DataTable;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Icon      from 'Assets/icon.jsx';\n\nconst EmptyTradeHistoryMessage = ({\n    has_selected_date,\n    component_icon,\n    localized_message,\n    localized_period_message,\n}) => (\n    <React.Fragment>\n        <div className='empty-trade-history'>\n            <Icon icon={component_icon} className='empty-trade-history__icon' />\n            <span className='empty-trade-history__text'>\n                {\n                    !has_selected_date ?\n                        localized_message\n                        :\n                        localized_period_message\n                }\n            </span>\n        </div>\n    </React.Fragment>\n);\n\nEmptyTradeHistoryMessage.propTypes = {\n    component_icon          : PropTypes.string,\n    has_selected_date       : PropTypes.bool,\n    localized_message       : PropTypes.string,\n    localized_period_message: PropTypes.string,\n};\n\nexport default EmptyTradeHistoryMessage;\n","import React from 'react';\n\nconst ReportsMeta = ({ i18n_heading, i18n_message }) => (\n    <div className='reports__meta'>\n        <div className='reports__meta-description'>\n            <h1 className='reports__meta-description--heading'>\n                { i18n_heading }\n            </h1>\n            <p className='reports__meta-description--paragraph'>\n                { i18n_message }\n            </p>\n        </div>\n        {/* TODO: Add Filter component (daterangepicker) */}\n        {/* <div className='reports__meta-filter'> */}\n        {/*    [FILTER COMPONENT] */}\n        {/* </div> */}\n    </div>\n);\n\nexport { ReportsMeta };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Loading   from '../../../templates/_common/components/loading.jsx';\n\nconst PlaceholderComponent = (props) => {\n    const EmptyMessageComponent = props.empty_message_component;\n    return (\n        <React.Fragment>\n            { props.is_empty &&\n            <EmptyMessageComponent\n                component_icon={props.component_icon}\n                has_selected_date={props.has_selected_date}\n                localized_message={props.localized_message}\n            />\n            }\n            {props.is_loading && <Loading />}\n        </React.Fragment>\n    );\n};\n\nPlaceholderComponent.propTypes = {\n    component_icon         : PropTypes.string,\n    empty_message_component: PropTypes.func,\n    has_selected_date      : PropTypes.bool,\n    localized_message      : PropTypes.string,\n};\n\nexport default PlaceholderComponent;\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst available_modes = [\n    'default',\n    'success',\n    'warn',\n    'danger',\n    'info',\n];\n\nconst Label = ({ mode, children }) => {\n    const type = available_modes.some(m => m === mode) ? mode : 'default';\n\n    return (\n        <span className={classNames('label', {\n            [`label--${type}`]: type,\n        })}\n        >{children}\n        </span>\n    );\n};\nLabel.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]),\n    mode: PropTypes.oneOf(available_modes),\n};\nexport default Label;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { getTimePercentage } from 'App/Components/Elements/PositionsDrawer/helpers';\nimport ProgressSlider        from 'App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-slider.jsx';\nimport { connect }           from 'Stores/connect';\n\nconst ProgressSliderStream = ({\n    id,\n    is_loading,\n    getPositionById,\n    server_time,\n}) => {\n    const position = getPositionById(id);\n    if (!position) {\n        return <div />;\n    }\n\n    const { contract_info } = position;\n    const percentage = getTimePercentage(server_time, contract_info.purchase_time, contract_info.date_expiry);\n\n    return <ProgressSlider\n        is_loading={is_loading}\n        remaining_time={contract_info.date_expiry}\n        percentage={percentage}\n        has_result={false}\n        current_tick={position.current_tick}\n        ticks_count={contract_info.ticks_count}\n    />;\n};\n\nProgressSliderStream.propTypes = {\n    getPositionById: PropTypes.func,\n    id             : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    is_loading     : PropTypes.bool,\n    server_time    : PropTypes.object,\n};\n\nexport default connect(({ modules, common }) => ({\n    is_loading     : modules.portfolio.is_loading,\n    server_time    : common.server_time,\n    getPositionById: modules.portfolio.getPositionById,\n}))(ProgressSliderStream);\n","export const getProfitOrLoss = value => +value.replace(/,/g, '') >= 0 ? 'profit' : 'loss';\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { UnderlyingIcon }       from 'App/Components/Elements/underlying-icon.jsx';\nimport Icon                     from 'Assets/icon.jsx';\nimport { getMarketInformation } from '../Helpers/market-underyling';\n\nconst MarketSymbolIconRow = ({ payload, show_description }) => {\n    const should_show_category_icon = typeof payload.shortcode === 'string';\n    const market_information = getMarketInformation(payload);\n\n    if (should_show_category_icon && market_information) {\n        return (\n            <div className='market-symbol-icon'>\n                <div className='market-symbol-icon-name'>\n                    <UnderlyingIcon market={market_information.underlying} />\n                    {show_description && payload.display_name}\n                </div>\n\n                <div className='market-symbol-icon-category'>\n                    <Icon icon='IconTradeType' type={market_information.category} />\n                    {show_description && market_information.category}\n                </div>\n            </div>\n        );\n    } else if (['deposit', 'withdrawal'].includes(payload.action_type)) {\n        return (\n            <div className='market-symbol-icon'>\n                {\n                    payload.action_type === 'deposit' ? (\n                        <Icon icon='IconDeposit' />\n                    ) : (\n                        <Icon icon='IconWithdrawal' />\n                    )\n                }\n            </div>\n        );\n    }\n\n    return (\n        <svg width='32' height='32' className='unknown-icon'>\n            <rect width='32' height='32' />\n        </svg>\n    );\n};\n\nMarketSymbolIconRow.propTypes = {\n    action          : PropTypes.string,\n    payload         : PropTypes.object,\n    show_description: PropTypes.bool,\n};\n\nexport default MarketSymbolIconRow;\n","import React               from 'react';\nimport PropTypes           from 'prop-types';\nimport { getProfitOrLoss } from 'Modules/Reports/Helpers/profit-loss';\n\nconst ProfitLossCell = ({ value, children }) => {\n    const status = getProfitOrLoss(value);\n\n    return (\n        <span className={`amount--${status}`}>\n            {children}\n        </span>\n    );\n};\n\nProfitLossCell.propTypes = {\n    value: PropTypes.string,\n};\n\nexport default ProfitLossCell;\n","import React                from 'react';\nimport { localize }         from 'App/i18n';\nimport Label                from 'App/Components/Elements/Label';\nimport Money                from 'App/Components/Elements/money.jsx';\nimport ProgressSliderStream from 'App/Containers/ProgressSliderStream';\nimport IndicativeCell       from 'Modules/Portfolio/Components/indicative-cell.jsx';\nimport { getProfitOrLoss }  from 'Modules/Reports/Helpers/profit-loss';\nimport MarketSymbolIconRow  from '../Components/market-symbol-icon-row.jsx';\nimport ProfitLossCell       from '../Components/profit_loss_cell.jsx';\n\nconst getModeFromValue = (key) => {\n    const map = {\n        deposit   : 'warn',\n        withdrawal: 'info',\n        sell      : 'danger',\n        buy       : 'success',\n        default   : 'default',\n    };\n\n    if (Object.keys(map).find(x => x === key)) {\n        return map[key];\n    }\n\n    return map.default;\n};\n/* eslint-disable react/display-name, react/prop-types */\nexport const getStatementTableColumnsTemplate = (currency) => [\n    {\n        key              : 'icon',\n        title            : '',\n        col_index        : 'action_type',\n        renderCellContent: ({ cell_value, row_obj }) => (\n            <MarketSymbolIconRow\n                action={cell_value}\n                key={row_obj.transaction_id}\n                payload={row_obj}\n            />\n        ),\n    }, {\n        title    : localize('Ref. ID'),\n        col_index: 'refid',\n    }, {\n        title    : localize('Transaction time'),\n        col_index: 'date',\n    }, {\n        key              : 'mode',\n        title            : localize('Transaction'),\n        col_index        : 'action_type',\n        renderCellContent: ({ cell_value, row_obj }) => (\n            <Label mode={getModeFromValue(cell_value)}>{row_obj.action}</Label>\n        ),\n    }, {\n        title            : localize('Credit/Debit'),\n        col_index        : 'amount',\n        renderCellContent: ({ cell_value }) => <div className={`amount--${getProfitOrLoss(cell_value)}`} ><Money has_sign amount={cell_value.replace(/[,]+/g, '')} currency={currency} /></div>,\n    }, {\n        title            : localize('Balance'),\n        col_index        : 'balance',\n        renderCellContent: ({ cell_value }) => <Money amount={cell_value.replace(/[,]+/g, '')} currency={currency} />,\n    },\n];\nexport const getProfitTableColumnsTemplate = (currency) => [\n    {\n        key              : 'icon',\n        title            : '',\n        col_index        : 'action_type',\n        renderCellContent: ({ cell_value, row_obj, is_footer }) => {\n            if (is_footer) return localize('Total profit/loss');\n\n            return (\n                <MarketSymbolIconRow\n                    action={cell_value}\n                    key={row_obj.transaction_id}\n                    payload={row_obj}\n                />\n            );\n        },\n    }, {\n        title    : localize('Ref. ID'),\n        col_index: 'transaction_id',\n    }, {\n        title    : localize('Buy time'),\n        col_index: 'purchase_time',\n    }, {\n        title            : localize('Buy price'),\n        col_index        : 'buy_price',\n        renderCellContent: ({ cell_value, is_footer }) => {\n            if (is_footer) return '';\n\n            return <Money amount={cell_value} currency={currency} />;\n        },\n    }, {\n        title    : localize('Sell time'),\n        col_index: 'sell_time',\n    }, {\n        title            : localize('Sell price'),\n        col_index        : 'sell_price',\n        renderCellContent: ({ cell_value, is_footer }) => {\n            if (is_footer) return '';\n\n            return <Money amount={cell_value} currency={currency} />;\n        },\n    }, {\n        title            : localize('Profit/Loss'),\n        col_index        : 'profit_loss',\n        renderCellContent: ({ cell_value }) => (\n            <ProfitLossCell value={cell_value}>\n                <Money has_sign amount={cell_value.replace(/[,]+/g, '')} currency={currency} />\n            </ProfitLossCell>\n        ),\n    },\n];\nexport const getOpenPositionsColumnsTemplate = (currency) => [\n    {\n        title            : '',\n        col_index        : 'type',\n        renderCellContent: ({ cell_value, row_obj, is_footer }) => {\n            if (is_footer) return localize('Total');\n\n            return (\n                <MarketSymbolIconRow\n                    action={cell_value}\n                    key={row_obj.id}\n                    payload={row_obj.contract_info}\n                />\n            );\n        },\n    }, {\n        title    : localize('Ref. ID'),\n        col_index: 'reference',\n    }, {\n        title            : localize('Buy price'),\n        col_index        : 'purchase',\n        renderCellContent: ({ cell_value }) => (\n            <Money amount={cell_value} currency={currency} />\n        ),\n    }, {\n        title            : localize('Potential payout'),\n        col_index        : 'payout',\n        renderCellContent: ({ cell_value }) => (\n            cell_value ? <Money amount={cell_value} currency={currency} />\n                : <span>-</span>\n        ),\n    }, {\n        title            : localize('Indicative price'),\n        col_index        : 'indicative',\n        renderCellContent: ({ cell_value, row_obj }) => (\n            <IndicativeCell amount={+cell_value} currency={currency} status={row_obj.status} />\n        ),\n    }, {\n        title            : localize('Remaining time'),\n        col_index        : 'id',\n        renderCellContent: ({ cell_value }) => (\n            <ProgressSliderStream id={cell_value} />\n        ),\n    },\n];\n/* eslint-enable react/display-name, react/prop-types */\n","import { PropTypes as MobxPropTypes }      from 'mobx-react';\nimport PropTypes                           from 'prop-types';\nimport React                               from 'react';\nimport { withRouter }                      from 'react-router-dom';\nimport { localize }                        from 'App/i18n';\nimport { urlFor }                          from '_common/url';\nimport DataTable                           from 'App/Components/Elements/DataTable';\nimport Localize                            from 'App/Components/Elements/localize.jsx';\nimport { website_name }                    from 'App/Constants/app-config';\nimport { getContractPath }                 from 'App/Components/Routes/helpers';\nimport EmptyTradeHistoryMessage            from 'Modules/Reports/Components/empty-trade-history-message.jsx';\nimport { ReportsMeta }                     from 'Modules/Reports/Components/reports-meta.jsx';\nimport { getOpenPositionsColumnsTemplate } from 'Modules/Reports/Constants/data-table-constants';\nimport PlaceholderComponent                from 'Modules/Reports/Components/placeholder-component.jsx';\nimport { connect }                         from 'Stores/connect';\n\nclass OpenPositions extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    getRowAction = (row_obj) => (\n        row_obj.is_unsupported ?\n            {\n                component: (\n                    <Localize\n                        i18n_default_text='This trade type is currently not supported on {{website_name}}. Please go to <0>Binary.com</0> for details.'\n                        values={{\n                            website_name,\n                        }}\n                        components={[\n                            <a key={0} className='link link--orange' rel='noopener noreferrer' target='_blank' href={urlFor('user/portfoliows', undefined, undefined, true)} />,\n                        ]}\n                    />\n                ),\n            }\n            : getContractPath(row_obj.id)\n    );\n\n    render() {\n        const {\n            active_positions,\n            component_icon,\n            is_loading,\n            error,\n            is_empty,\n            currency,\n            totals,\n        } = this.props;\n\n        if (error) {\n            return <p>{error}</p>;\n        }\n\n        return (\n            <React.Fragment>\n                <ReportsMeta\n                    i18n_heading={localize('Open positions')}\n                    i18n_message={localize('View all active trades on your account that can still incur a profit or a loss.')}\n                />\n                {(is_loading && active_positions.length === 0) || is_empty ?\n                    <PlaceholderComponent\n                        is_loading={is_loading || !active_positions}\n                        is_empty={is_empty}\n                        empty_message_component={EmptyTradeHistoryMessage}\n                        component_icon={component_icon}\n                        localized_message={localize('You have no open positions yet.')}\n                    />\n                    :\n                    currency && active_positions.length > 0 &&\n                    <DataTable\n                        className='open-positions'\n                        columns={getOpenPositionsColumnsTemplate(currency)}\n                        footer={totals}\n                        data_source={active_positions}\n                        getRowAction={this.getRowAction}\n                    >\n                        <PlaceholderComponent\n                            is_loading={is_loading}\n                        />\n                    </DataTable>\n                }\n            </React.Fragment>\n\n        );\n    }\n}\n\nOpenPositions.propTypes = {\n    active_positions: MobxPropTypes.arrayOrObservableArray,\n    component_icon  : PropTypes.string,\n    currency        : PropTypes.string,\n    error           : PropTypes.string,\n    history         : PropTypes.object,\n    is_empty        : PropTypes.bool,\n    is_loading      : PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_tablet       : PropTypes.bool,\n    onMount         : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    totals          : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, client }) => ({\n        currency        : client.currency,\n        active_positions: modules.portfolio.active_positions,\n        error           : modules.portfolio.error,\n        is_empty        : modules.portfolio.is_active_empty,\n        is_loading      : modules.portfolio.is_loading,\n        onMount         : modules.portfolio.onMount,\n        onUnmount       : modules.portfolio.onUnmount,\n        totals          : modules.portfolio.active_positions_totals,\n    })\n)(withRouter(OpenPositions));\n"],"sourceRoot":""}