{"version":3,"sources":["webpack:///./Modules/Reports/Helpers/market-underyling.js","webpack:///./Modules/Reports/Components/empty-trade-history-message.jsx","webpack:///./Modules/Reports/Components/reports-meta.jsx","webpack:///./Modules/Reports/Components/placeholder-component.jsx","webpack:///./App/Components/Elements/Label/label.jsx","webpack:///./App/Containers/ProgressSliderStream/progress-slider-stream.jsx","webpack:///./Modules/Reports/Helpers/profit-loss.js","webpack:///./Modules/Reports/Components/indicative-cell.jsx","webpack:///./Modules/Reports/Components/market-symbol-icon-row.jsx","webpack:///./Modules/Reports/Components/profit_loss_cell.jsx","webpack:///./Modules/Reports/Constants/data-table-constants.js","webpack:///./App/Components/Elements/DataTable/table-cell.jsx","webpack:///./App/Components/Elements/DataTable/table-row-info.jsx","webpack:///./App/Components/Elements/DataTable/table-row.jsx","webpack:///./App/Components/Elements/DataTable/data-table.jsx","webpack:///./Modules/Reports/Containers/open-positions.jsx"],"names":["__webpack_require__","d","__webpack_exports__","getMarketInformation","payload","market_info","category","underlying","extracted","RegExp","exec","shortcode","toLowerCase","prop_types__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","n","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","Assets_icon_jsx__WEBPACK_IMPORTED_MODULE_2__","EmptyTradeHistoryMessage","_ref","has_selected_date","component_icon","localized_message","localized_period_message","a","createElement","Fragment","className","icon","propTypes","PropTypes","string","bool","ReportsMeta","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","i18n_heading","i18n_message","_templates_common_components_loading_jsx__WEBPACK_IMPORTED_MODULE_2__","PlaceholderComponent","props","EmptyMessageComponent","empty_message_component","is_empty","is_loading","func","available_modes","Label","mode","children","type","some","m","react_default","classNames","concat","oneOfType","arrayOf","node","oneOf","ProgressSliderStream","id","getPositionById","server_time","position","contract_info","percentage","getTimePercentage","purchase_time","date_expiry","positions_progress_slider","remaining_time","has_result","current_tick","ticks_count","number","object","connect","_ref2","modules","common","portfolio","getProfitOrLoss","value","replace","IndicativeCell","amount","currency","status","status_class_name","undefined","money","localize","MarketSymbolIconRow","show_description","should_show_category_icon","market_information","underlying_icon","market","display_name","includes","action_type","width","height","action","ProfitLossCell","data_table_constants_getStatementTableColumnsTemplate","data_table_constants_getProfitTableColumnsTemplate","data_table_constants_getOpenPositionsColumnsTemplate","getStatementTableColumnsTemplate","key","title","col_index","renderCellContent","cell_value","row_obj","market_symbol_icon_row","transaction_id","map","label","deposit","withdrawal","sell","buy","default","Object","keys","find","x","_ref3","has_sign","_ref4","getProfitTableColumnsTemplate","_ref5","is_footer","_ref6","_ref7","_ref8","profit_loss_cell","getOpenPositionsColumnsTemplate","_ref9","_ref10","_ref11","_ref12","indicative_cell","_ref13","progress_slider_stream","TableCell","TableRowInfo","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","toggleDetails","setState","state","showDetails","React","Component","onClick","statement__row--detail","component","message","cells","TableRow","columns","is_header","_ref$row_obj","to","cell_content","table_cell","row_class_name","table__row-link","react_router_dom","pathname","from_table_row","table_row_info_TableRowInfo","array","DataTable","data_table_classCallCheck","data_table_possibleConstructorReturn","data_table_getPrototypeOf","PureComponent","el_table_body","clientHeight","alignHeader","data_source","length","first_body_row","firstChild","scrollbar_offset","el_table_head","offsetWidth","style","paddingRight","_classNames","_this2","_this$props","footer","getRowAction","onScroll","TableData","table_row","data_table_typeof","data_table_defineProperty","ref","el","lib","autoHeight","autoHeightMax","autoHide","MobxPropTypes","arrayOrObservableArray","OpenPositions","is_unsupported","react__WEBPACK_IMPORTED_MODULE_2___default","App_Components_Elements_localize_jsx__WEBPACK_IMPORTED_MODULE_7__","i18n_default_text","values","website_name","components","rel","target","href","urlFor","getContractPath","onMount","onUnmount","active_positions","error","totals","Modules_Reports_Components_reports_meta_jsx__WEBPACK_IMPORTED_MODULE_11__","Modules_Reports_Components_placeholder_component_jsx__WEBPACK_IMPORTED_MODULE_13__","App_Components_Elements_DataTable__WEBPACK_IMPORTED_MODULE_6__","history","is_mobile","is_tablet","client","is_active_empty","active_positions_totals","withRouter"],"mappings":"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","file":"js/open_positions.ce82e06078dd5fd50daf.js","sourcesContent":["export const getMarketInformation = (payload) => {\n    const market_info = {\n        category  : '',\n        underlying: '',\n    };\n\n    const pattern = new RegExp('^([A-Z]+)_((OTC_[A-Z0-9]+)|R_[\\\\d]{2,3}|[A-Z]+)_'); // Used to get market name from shortcode\n    const extracted = pattern.exec(payload.shortcode);\n    if (extracted !== null) {\n        market_info.category   = extracted[1].toLowerCase();\n        market_info.underlying = extracted[2];\n    }\n\n    return market_info;\n};\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Icon      from 'Assets/icon.jsx';\n\nconst EmptyTradeHistoryMessage = ({\n    has_selected_date,\n    component_icon,\n    localized_message,\n    localized_period_message,\n}) => (\n    <React.Fragment>\n        <div className='empty-trade-history'>\n            <Icon icon={component_icon} className='empty-trade-history__icon' />\n            <span className='empty-trade-history__text'>\n                {\n                    !has_selected_date ?\n                        localized_message\n                        :\n                        localized_period_message\n                }\n            </span>\n        </div>\n    </React.Fragment>\n);\n\nEmptyTradeHistoryMessage.propTypes = {\n    component_icon          : PropTypes.string,\n    has_selected_date       : PropTypes.bool,\n    localized_message       : PropTypes.string,\n    localized_period_message: PropTypes.string,\n};\n\nexport default EmptyTradeHistoryMessage;\n","import React from 'react';\n\nconst ReportsMeta = ({ i18n_heading, i18n_message }) => (\n    <div className='reports__meta'>\n        <div className='reports__meta-description'>\n            <h1 className='reports__meta-description--heading'>\n                { i18n_heading }\n            </h1>\n            <p className='reports__meta-description--paragraph'>\n                { i18n_message }\n            </p>\n        </div>\n        {/* TODO: Add Filter component (daterangepicker) */}\n        {/* <div className='reports__meta-filter'> */}\n        {/*    [FILTER COMPONENT] */}\n        {/* </div> */}\n    </div>\n);\n\nexport { ReportsMeta };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Loading   from '../../../templates/_common/components/loading.jsx';\n\nconst PlaceholderComponent = (props) => {\n    const EmptyMessageComponent = props.empty_message_component;\n    return (\n        <React.Fragment>\n            { props.is_empty &&\n            <EmptyMessageComponent\n                component_icon={props.component_icon}\n                has_selected_date={props.has_selected_date}\n                localized_message={props.localized_message}\n            />\n            }\n            {props.is_loading && <Loading />}\n        </React.Fragment>\n    );\n};\n\nPlaceholderComponent.propTypes = {\n    component_icon         : PropTypes.string,\n    empty_message_component: PropTypes.func,\n    has_selected_date      : PropTypes.bool,\n    localized_message      : PropTypes.string,\n};\n\nexport default PlaceholderComponent;\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst available_modes = [\n    'default',\n    'success',\n    'warn',\n    'danger',\n    'info',\n];\n\nconst Label = ({ mode, children }) => {\n    const type = available_modes.some(m => m === mode) ? mode : 'default';\n\n    return (\n        <span className={classNames('label', {\n            [`label--${type}`]: type,\n        })}\n        >{children}\n        </span>\n    );\n};\nLabel.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]),\n    mode: PropTypes.oneOf(available_modes),\n};\nexport default Label;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { getTimePercentage } from 'App/Components/Elements/PositionsDrawer/helpers';\nimport ProgressSlider        from 'App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-slider.jsx';\nimport { connect }           from 'Stores/connect';\n\nconst ProgressSliderStream = ({\n    id,\n    is_loading,\n    getPositionById,\n    server_time,\n}) => {\n    const position = getPositionById(id);\n    if (!position) {\n        return <div />;\n    }\n\n    const { contract_info } = position;\n    const percentage = getTimePercentage(server_time, contract_info.purchase_time, contract_info.date_expiry);\n\n    return <ProgressSlider\n        is_loading={is_loading}\n        remaining_time={contract_info.date_expiry}\n        percentage={percentage}\n        has_result={false}\n        current_tick={position.current_tick}\n        ticks_count={contract_info.ticks_count}\n    />;\n};\n\nProgressSliderStream.propTypes = {\n    getPositionById: PropTypes.func,\n    id             : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    is_loading     : PropTypes.bool,\n    server_time    : PropTypes.object,\n};\n\nexport default connect(({ modules, common }) => ({\n    is_loading     : modules.portfolio.is_loading,\n    server_time    : common.server_time,\n    getPositionById: modules.portfolio.getPositionById,\n}))(ProgressSliderStream);\n","export const getProfitOrLoss = value => +value.replace(/,/g, '') >= 0 ? 'profit' : 'loss';\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst IndicativeCell = ({ amount, currency, status }) => {\n    const status_class_name = status\n        ? `indicative--${status}`\n        : undefined;\n\n    return (\n        <div className={status_class_name}>\n            <Money amount={amount} currency={currency} />\n\n            {status === 'no-resale' &&\n                <div className='indicative__no-resale-msg'>\n                    {localize('Resale not offered')}\n                </div>\n            }\n        </div>\n    );\n};\n\nIndicativeCell.propTypes = {\n    amount  : PropTypes.number,\n    currency: PropTypes.string,\n    status  : PropTypes.string,\n};\n\nexport default IndicativeCell;\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { UnderlyingIcon }       from 'App/Components/Elements/underlying-icon.jsx';\nimport Icon                     from 'Assets/icon.jsx';\nimport { getMarketInformation } from '../Helpers/market-underyling';\n\nconst MarketSymbolIconRow = ({ payload, show_description }) => {\n    const should_show_category_icon = typeof payload.shortcode === 'string';\n    const market_information = getMarketInformation(payload);\n\n    if (should_show_category_icon && market_information) {\n        return (\n            <div className='market-symbol-icon'>\n                <div className='market-symbol-icon-name'>\n                    <UnderlyingIcon market={market_information.underlying} />\n                    {show_description && payload.display_name}\n                </div>\n\n                <div className='market-symbol-icon-category'>\n                    <Icon icon='IconTradeType' type={market_information.category} />\n                    {show_description && market_information.category}\n                </div>\n            </div>\n        );\n    } else if (['deposit', 'withdrawal'].includes(payload.action_type)) {\n        return (\n            <div className='market-symbol-icon'>\n                {\n                    payload.action_type === 'deposit' ? (\n                        <Icon icon='IconDeposit' />\n                    ) : (\n                        <Icon icon='IconWithdrawal' />\n                    )\n                }\n            </div>\n        );\n    }\n\n    return (\n        <svg width='32' height='32' className='unknown-icon'>\n            <rect width='32' height='32' />\n        </svg>\n    );\n};\n\nMarketSymbolIconRow.propTypes = {\n    action          : PropTypes.string,\n    payload         : PropTypes.object,\n    show_description: PropTypes.bool,\n};\n\nexport default MarketSymbolIconRow;\n","import React               from 'react';\nimport PropTypes           from 'prop-types';\nimport { getProfitOrLoss } from 'Modules/Reports/Helpers/profit-loss';\n\nconst ProfitLossCell = ({ value, children }) => {\n    const status = getProfitOrLoss(value);\n\n    return (\n        <span className={`amount--${status}`}>\n            {children}\n        </span>\n    );\n};\n\nProfitLossCell.propTypes = {\n    value: PropTypes.string,\n};\n\nexport default ProfitLossCell;\n","import React                from 'react';\nimport { localize }         from 'App/i18n';\nimport Label                from 'App/Components/Elements/Label';\nimport Money                from 'App/Components/Elements/money.jsx';\nimport ProgressSliderStream from 'App/Containers/ProgressSliderStream';\nimport { getProfitOrLoss }  from 'Modules/Reports/Helpers/profit-loss';\nimport IndicativeCell       from '../Components/indicative-cell.jsx';\nimport MarketSymbolIconRow  from '../Components/market-symbol-icon-row.jsx';\nimport ProfitLossCell       from '../Components/profit_loss_cell.jsx';\n\nconst getModeFromValue = (key) => {\n    const map = {\n        deposit   : 'warn',\n        withdrawal: 'info',\n        sell      : 'danger',\n        buy       : 'success',\n        default   : 'default',\n    };\n\n    if (Object.keys(map).find(x => x === key)) {\n        return map[key];\n    }\n\n    return map.default;\n};\n/* eslint-disable react/display-name, react/prop-types */\nexport const getStatementTableColumnsTemplate = (currency) => [\n    {\n        key              : 'icon',\n        title            : '',\n        col_index        : 'action_type',\n        renderCellContent: ({ cell_value, row_obj }) => (\n            <MarketSymbolIconRow\n                action={cell_value}\n                key={row_obj.transaction_id}\n                payload={row_obj}\n            />\n        ),\n    }, {\n        title    : localize('Ref. ID'),\n        col_index: 'refid',\n    }, {\n        title    : localize('Transaction time'),\n        col_index: 'date',\n    }, {\n        key              : 'mode',\n        title            : localize('Transaction'),\n        col_index        : 'action_type',\n        renderCellContent: ({ cell_value, row_obj }) => (\n            <Label mode={getModeFromValue(cell_value)}>{row_obj.action}</Label>\n        ),\n    }, {\n        title            : localize('Credit/Debit'),\n        col_index        : 'amount',\n        renderCellContent: ({ cell_value }) => <div className={`amount--${getProfitOrLoss(cell_value)}`} ><Money has_sign amount={cell_value.replace(/[,]+/g, '')} currency={currency} /></div>,\n    }, {\n        title            : localize('Balance'),\n        col_index        : 'balance',\n        renderCellContent: ({ cell_value }) => <Money amount={cell_value.replace(/[,]+/g, '')} currency={currency} />,\n    },\n];\nexport const getProfitTableColumnsTemplate = (currency) => [\n    {\n        key              : 'icon',\n        title            : '',\n        col_index        : 'action_type',\n        renderCellContent: ({ cell_value, row_obj, is_footer }) => {\n            if (is_footer) return localize('Total profit/loss');\n\n            return (\n                <MarketSymbolIconRow\n                    action={cell_value}\n                    key={row_obj.transaction_id}\n                    payload={row_obj}\n                />\n            );\n        },\n    }, {\n        title    : localize('Ref. ID'),\n        col_index: 'transaction_id',\n    }, {\n        title    : localize('Buy time'),\n        col_index: 'purchase_time',\n    }, {\n        title            : localize('Buy price'),\n        col_index        : 'buy_price',\n        renderCellContent: ({ cell_value, is_footer }) => {\n            if (is_footer) return '';\n\n            return <Money amount={cell_value} currency={currency} />;\n        },\n    }, {\n        title    : localize('Sell time'),\n        col_index: 'sell_time',\n    }, {\n        title            : localize('Sell price'),\n        col_index        : 'sell_price',\n        renderCellContent: ({ cell_value, is_footer }) => {\n            if (is_footer) return '';\n\n            return <Money amount={cell_value} currency={currency} />;\n        },\n    }, {\n        title            : localize('Profit/Loss'),\n        col_index        : 'profit_loss',\n        renderCellContent: ({ cell_value }) => (\n            <ProfitLossCell value={cell_value}>\n                <Money has_sign amount={cell_value.replace(/[,]+/g, '')} currency={currency} />\n            </ProfitLossCell>\n        ),\n    },\n];\nexport const getOpenPositionsColumnsTemplate = (currency) => [\n    {\n        title            : '',\n        col_index        : 'type',\n        renderCellContent: ({ cell_value, row_obj, is_footer }) => {\n            if (is_footer) return localize('Total');\n\n            return (\n                <MarketSymbolIconRow\n                    action={cell_value}\n                    key={row_obj.id}\n                    payload={row_obj.contract_info}\n                />\n            );\n        },\n    }, {\n        title    : localize('Ref. ID'),\n        col_index: 'reference',\n    }, {\n        title            : localize('Buy price'),\n        col_index        : 'purchase',\n        renderCellContent: ({ cell_value }) => (\n            <Money amount={cell_value} currency={currency} />\n        ),\n    }, {\n        title            : localize('Potential payout'),\n        col_index        : 'payout',\n        renderCellContent: ({ cell_value }) => (\n            cell_value ? <Money amount={cell_value} currency={currency} />\n                : <span>-</span>\n        ),\n    }, {\n        title            : localize('Indicative price'),\n        col_index        : 'indicative',\n        renderCellContent: ({ cell_value, row_obj }) => (\n            <IndicativeCell amount={+cell_value} currency={currency} status={row_obj.status} />\n        ),\n    }, {\n        title            : localize('Remaining time'),\n        col_index        : 'id',\n        renderCellContent: ({ cell_value }) => (\n            <ProgressSliderStream id={cell_value} />\n        ),\n    },\n];\n/* eslint-enable react/display-name, react/prop-types */\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst TableCell = ({ col_index, children }) => (\n    <div className={classNames('table__cell', col_index)}>\n        {children}\n    </div>\n);\n\nTableCell.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.string,\n    ]),\n    col_index: PropTypes.string,\n};\n\nexport default TableCell;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nexport default class TableRowInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showDetails: false,\n        };\n    }\n\n    toggleDetails = () => {\n        if (this.props.replace) {\n            this.setState(state => ({ showDetails: !state.showDetails }));\n        }\n    };\n\n    render() {\n        return (\n            <div\n                onClick={this.props.is_footer || !this.props.replace ? undefined : this.toggleDetails}\n                className={classNames(this.props.className, { 'statement__row--detail': this.state.showDetails })}\n            >\n                {\n                    this.state.showDetails ?\n                        <div>\n                            {this.props.replace.component ?\n                                this.props.replace.component\n                                :\n                                <p>{this.props.replace.message}</p>\n                            }\n                        </div>\n                        : this.props.cells\n                }\n            </div>\n        );\n    }\n}\n\nTableRowInfo.propTypes = {\n    cells    : PropTypes.arrayOf(PropTypes.node),\n    className: PropTypes.string,\n    replace  : PropTypes.object,\n};\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { NavLink }  from 'react-router-dom';\nimport TableCell    from './table-cell.jsx';\nimport TableRowInfo from './table-row-info.jsx';\n\nconst TableRow = ({\n    className,\n    columns,\n    is_footer,\n    is_header,\n    replace,\n    row_obj = {},\n    to,\n}) => {\n    const cells = columns.map(({ col_index, renderCellContent, title, key }) => {\n        let cell_content = title;\n        if (!is_header) {\n            const cell_value = row_obj[col_index] || '';\n            cell_content = renderCellContent\n                ? renderCellContent({ cell_value, col_index, row_obj, is_footer })\n                : cell_value;\n        }\n\n        return (\n            <TableCell col_index={col_index} key={key || col_index}>\n                {cell_content}\n            </TableCell>\n        );\n    });\n\n    const row_class_name = classNames('table__row', { 'table__row-link': to || replace }, { [`${className}__row`]: className });\n\n    return (\n        to ?\n            <NavLink\n                className={row_class_name}\n                to={{\n                    pathname: to,\n                    state   : {\n                        from_table_row: true,\n                    },\n                }}\n            >\n                {cells}\n            </NavLink>\n            :\n            <TableRowInfo\n                className={row_class_name}\n                cells={cells}\n                replace={replace}\n                is_footer={is_footer}\n            />\n    );\n};\n\nTableRow.propTypes = {\n    className: PropTypes.string,\n    columns  : PropTypes.array,\n    is_footer: PropTypes.bool,\n    is_header: PropTypes.bool,\n    replace  : PropTypes.object,\n    row_obj  : PropTypes.object,\n    to       : PropTypes.string,\n};\n\nexport default TableRow;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport TableRow                       from './table-row.jsx';\n\n/* TODO:\n      1. implement sorting by column (ASC/DESC)\n      2. implement filtering per column\n*/\n\nclass DataTable extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            height: 200,\n        };\n    }\n\n    componentDidMount() {\n        this.setState({\n            height: this.el_table_body.clientHeight,\n        });\n    }\n\n    componentDidUpdate() {\n        this.alignHeader();\n    }\n\n    alignHeader() {\n        // scrollbar inside table-body can push content (depending on the browser and if mouse is plugged in)\n        if (!this.props.data_source.length) return;\n        const first_body_row   = this.el_table_body.firstChild;\n        const scrollbar_offset = this.el_table_head.offsetWidth - first_body_row.offsetWidth;\n        this.el_table_head.style.paddingRight = `${scrollbar_offset}px`;\n    }\n\n    render() {\n        const {\n            children,\n            className,\n            columns,\n            data_source,\n            footer,\n            getRowAction,\n            is_empty,\n            onScroll,\n        } = this.props;\n\n        const TableData =\n            <React.Fragment>\n                {data_source.map((row_obj, id) => {\n                    const action = getRowAction && getRowAction(row_obj);\n\n                    return (\n                        <TableRow\n                            className={className}\n                            row_obj={row_obj}\n                            columns={columns}\n                            key={id}\n                            to={typeof action === 'string' ? action : undefined}\n                            replace={typeof action === 'object' ? action : undefined}\n                        />\n                    );\n                }\n                )}\n                {children}\n            </React.Fragment>;\n\n        return (\n            <div className={classNames('table', {\n                [`${className}`]         : className,\n                [`${className}__table`]  : className,\n                [`${className}__content`]: className,\n            })}\n            >\n                <div className='table__head' ref={el => { this.el_table_head = el; }}>\n                    <TableRow className={className} columns={columns} is_header />\n                </div>\n                <div\n                    className='table__body'\n                    onScroll={onScroll}\n                    ref={el => { this.el_table_body = el; }}\n                >\n                    {is_empty ?\n                        TableData\n                        :\n                        <Scrollbars\n                            autoHeight\n                            autoHeightMax={this.state.height}\n                            autoHide\n                        >\n                            {TableData}\n                        </Scrollbars>\n                    }\n                </div>\n\n                {footer &&\n                    <div className='table__foot'>\n                        <TableRow\n                            className={className}\n                            row_obj={footer}\n                            columns={columns}\n                            is_footer\n                        />\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nDataTable.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.arrayOf(PropTypes.node),\n    ]),\n    className   : PropTypes.string,\n    columns     : PropTypes.array,\n    data_source : MobxPropTypes.arrayOrObservableArray,\n    footer      : PropTypes.object,\n    getRowAction: PropTypes.func,\n    onScroll    : PropTypes.func,\n};\n\nexport default DataTable;\n","import { PropTypes as MobxPropTypes }      from 'mobx-react';\nimport PropTypes                           from 'prop-types';\nimport React                               from 'react';\nimport { withRouter }                      from 'react-router-dom';\nimport { localize }                        from 'App/i18n';\nimport { urlFor }                          from '_common/url';\nimport DataTable                           from 'App/Components/Elements/DataTable';\nimport Localize                            from 'App/Components/Elements/localize.jsx';\nimport { website_name }                    from 'App/Constants/app-config';\nimport { getContractPath }                 from 'App/Components/Routes/helpers';\nimport EmptyTradeHistoryMessage            from 'Modules/Reports/Components/empty-trade-history-message.jsx';\nimport { ReportsMeta }                     from 'Modules/Reports/Components/reports-meta.jsx';\nimport { getOpenPositionsColumnsTemplate } from 'Modules/Reports/Constants/data-table-constants';\nimport PlaceholderComponent                from 'Modules/Reports/Components/placeholder-component.jsx';\nimport { connect }                         from 'Stores/connect';\n\nclass OpenPositions extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    getRowAction = (row_obj) => (\n        row_obj.is_unsupported ?\n            {\n                component: (\n                    <Localize\n                        i18n_default_text='This trade type is currently not supported on {{website_name}}. Please go to <0>Binary.com</0> for details.'\n                        values={{\n                            website_name,\n                        }}\n                        components={[\n                            <a key={0} className='link link--orange' rel='noopener noreferrer' target='_blank' href={urlFor('user/portfoliows', undefined, undefined, true)} />,\n                        ]}\n                    />\n                ),\n            }\n            : getContractPath(row_obj.id)\n    );\n\n    render() {\n        const {\n            active_positions,\n            component_icon,\n            is_loading,\n            error,\n            is_empty,\n            currency,\n            totals,\n        } = this.props;\n\n        if (error) {\n            return <p>{error}</p>;\n        }\n\n        return (\n            <React.Fragment>\n                <ReportsMeta\n                    i18n_heading={localize('Open positions')}\n                    i18n_message={localize('View all active trades on your account that can still incur a profit or a loss.')}\n                />\n                {(is_loading && active_positions.length === 0) || is_empty ?\n                    <PlaceholderComponent\n                        is_loading={is_loading || !active_positions}\n                        is_empty={is_empty}\n                        empty_message_component={EmptyTradeHistoryMessage}\n                        component_icon={component_icon}\n                        localized_message={localize('You have no open positions yet.')}\n                    />\n                    :\n                    currency && active_positions.length > 0 &&\n                    <DataTable\n                        className='open-positions'\n                        columns={getOpenPositionsColumnsTemplate(currency)}\n                        footer={totals}\n                        data_source={active_positions}\n                        getRowAction={this.getRowAction}\n                    >\n                        <PlaceholderComponent\n                            is_loading={is_loading}\n                        />\n                    </DataTable>\n                }\n            </React.Fragment>\n\n        );\n    }\n}\n\nOpenPositions.propTypes = {\n    active_positions: MobxPropTypes.arrayOrObservableArray,\n    component_icon  : PropTypes.string,\n    currency        : PropTypes.string,\n    error           : PropTypes.string,\n    history         : PropTypes.object,\n    is_empty        : PropTypes.bool,\n    is_loading      : PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_tablet       : PropTypes.bool,\n    onMount         : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    totals          : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, client }) => ({\n        currency        : client.currency,\n        active_positions: modules.portfolio.active_positions,\n        error           : modules.portfolio.error,\n        is_empty        : modules.portfolio.is_active_empty,\n        is_loading      : modules.portfolio.is_loading,\n        onMount         : modules.portfolio.onMount,\n        onUnmount       : modules.portfolio.onUnmount,\n        totals          : modules.portfolio.active_positions_totals,\n    })\n)(withRouter(OpenPositions));\n"],"sourceRoot":""}