{"version":3,"sources":["webpack:///./Modules/Reports/Components/empty-trade-history-message.jsx","webpack:///./Modules/Reports/Components/reports-meta.jsx","webpack:///./Modules/Reports/Components/placeholder-component.jsx","webpack:///./App/Containers/ProgressSliderStream/progress-slider-stream.jsx","webpack:///./Modules/Reports/Helpers/profit-loss.js","webpack:///./Modules/Reports/Components/indicative-cell.jsx","webpack:///./Modules/Reports/Components/market-symbol-icon-row.jsx","webpack:///./Modules/Reports/Components/profit_loss_cell.jsx","webpack:///./Modules/Reports/Constants/data-table-constants.js","webpack:///./App/Components/Elements/DataTable/table-cell.jsx","webpack:///./App/Components/Elements/DataTable/table-row-info.jsx","webpack:///./App/Components/Elements/DataTable/table-row.jsx","webpack:///./App/Components/Elements/DataTable/data-table.jsx"],"names":["prop_types__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","n","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","Assets_icon_jsx__WEBPACK_IMPORTED_MODULE_2__","EmptyTradeHistoryMessage","_ref","has_selected_date","component_icon","localized_message","localized_period_message","a","createElement","Fragment","className","icon","propTypes","PropTypes","string","bool","d","__webpack_exports__","ReportsMeta","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","i18n_heading","i18n_message","filter_component","_templates_common_components_loading_jsx__WEBPACK_IMPORTED_MODULE_2__","PlaceholderComponent","props","EmptyMessageComponent","empty_message_component","is_empty","is_loading","func","ProgressSliderStream","id","position","getPositionById","react_default","contract_info","positions_progress_slider","expiry_time","date_expiry","has_result","current_tick","start_time","date_start","ticks_count","tick_count","oneOfType","number","server_time","object","connect","_ref2","modules","portfolio","getProfitOrLoss","value","replace","IndicativeCell","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","movement","amount","React","PureComponent","_this2","setState","_this$props","currency","status","money","Math","abs","type","localize","MarketSymbolIconRow","payload","show_description","should_show_category_icon","shortcode","info_from_shortcode","Shortcode","extractInfoFromShortcode","Popover","classNameTarget","classNameBubble","alignment","message","getMarketName","underlying","disable_target_icon","underlying_icon","market","display_name","getTradeTypeName","category","isHighLow","shortcode_info","concat","toLowerCase","includes","action_type","width","height","action","ProfitLossCell","children","data_table_constants_getStatementTableColumnsTemplate","data_table_constants_getProfitTableColumnsTemplate","data_table_constants_getOpenPositionsColumnsTemplate","getStatementTableColumnsTemplate","key","title","col_index","renderCellContent","cell_value","row_obj","market_symbol_icon_row","transaction_id","map","label","mode","deposit","withdrawal","sell","buy","default","Object","keys","find","x","_ref3","has_sign","_ref4","getProfitTableColumnsTemplate","items_count","_ref5","is_footer","item_count","_ref6","_ref7","_ref8","profit_loss_cell","getOpenPositionsColumnsTemplate","_ref9","_ref10","_ref11","_ref12","profit","classNames","open-positions__profit-loss--negative","open-positions__profit-loss--positive","_ref13","indicative_cell","is_valid_to_sell","_ref14","progress_slider_stream","TableCell","node","TableRowInfo","toggleDetails","showDetails","Component","onClick","undefined","statement__row--detail","component","cells","arrayOf","TableRow","columns","is_header","_ref$row_obj","to","cell_content","table_cell","row_class_name","table__row-link","react_router_dom","pathname","from_table_row","table_row_info_TableRowInfo","array","DataTable","data_table_classCallCheck","data_table_possibleConstructorReturn","data_table_getPrototypeOf","resizeDimensions","debounce","window","innerWidth","window_width","el_table_body","clientHeight","clientWidth","onresize","alignHeader","data_source","length","first_body_row","firstChild","scrollbar_offset","el_table_head","offsetWidth","style","paddingRight","index","getRowAction","item","content","table_row","data_table_typeof","_classNames","_this$props2","footer","onScroll","TableData","index_esm","itemCount","itemSize","rowRenderer","bind","data_table_defineProperty","ref","el","lib","autoHeight","autoHeightMax","autoHide","MobxPropTypes","arrayOrObservableArray"],"mappings":"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","file":"js/open_positions~profit_table~statement.5352181001424036d10d.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Icon      from 'Assets/icon.jsx';\n\nconst EmptyTradeHistoryMessage = ({\n    has_selected_date,\n    component_icon,\n    localized_message,\n    localized_period_message,\n}) => (\n    <React.Fragment>\n        <div className='empty-trade-history'>\n            <Icon icon={component_icon} className='empty-trade-history__icon' />\n            <span className='empty-trade-history__text'>\n                {\n                    !has_selected_date ?\n                        localized_message\n                        :\n                        localized_period_message\n                }\n            </span>\n        </div>\n    </React.Fragment>\n);\n\nEmptyTradeHistoryMessage.propTypes = {\n    component_icon          : PropTypes.string,\n    has_selected_date       : PropTypes.bool,\n    localized_message       : PropTypes.string,\n    localized_period_message: PropTypes.string,\n};\n\nexport default EmptyTradeHistoryMessage;\n","import React from 'react';\n\nconst ReportsMeta = ({ i18n_heading, i18n_message, filter_component }) => (\n    <div className='reports__meta'>\n        <div className='reports__meta-description'>\n            <h1 className='reports__meta-description--heading'>\n                { i18n_heading }\n            </h1>\n            <p className='reports__meta-description--paragraph'>\n                { i18n_message }\n            </p>\n        </div>\n        {filter_component &&\n        <div className='reports__meta-filter'>\n            { filter_component }\n        </div>\n        }\n    </div>\n);\n\nexport { ReportsMeta };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\nimport Loading   from '../../../templates/_common/components/loading.jsx';\n\nconst PlaceholderComponent = (props) => {\n    const EmptyMessageComponent = props.empty_message_component;\n    return (\n        <React.Fragment>\n            { props.is_empty &&\n            <EmptyMessageComponent\n                component_icon={props.component_icon}\n                has_selected_date={props.has_selected_date}\n                localized_message={props.localized_message}\n            />\n            }\n            {props.is_loading && <Loading />}\n        </React.Fragment>\n    );\n};\n\nPlaceholderComponent.propTypes = {\n    component_icon         : PropTypes.string,\n    empty_message_component: PropTypes.func,\n    has_selected_date      : PropTypes.bool,\n    localized_message      : PropTypes.string,\n};\n\nexport default PlaceholderComponent;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport ProgressSlider        from 'App/Components/Elements/PositionsDrawer/ProgressSlider/positions-progress-slider.jsx';\nimport { connect }           from 'Stores/connect';\n\nconst ProgressSliderStream = ({\n    id,\n    is_loading,\n    getPositionById,\n}) => {\n    const position = getPositionById(id);\n    if (!position) {\n        return <div />;\n    }\n\n    const { contract_info } = position;\n\n    return <ProgressSlider\n        is_loading={is_loading}\n        expiry_time={contract_info.date_expiry}\n        has_result={false}\n        current_tick={position.current_tick}\n        start_time={contract_info.date_start}\n        ticks_count={contract_info.tick_count}\n    />;\n};\n\nProgressSliderStream.propTypes = {\n    getPositionById: PropTypes.func,\n    id             : PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    is_loading     : PropTypes.bool,\n    server_time    : PropTypes.object,\n};\n\nexport default connect(({ modules }) => ({\n    is_loading     : modules.portfolio.is_loading,\n    getPositionById: modules.portfolio.getPositionById,\n}))(ProgressSliderStream);\n","export const getProfitOrLoss = value => +value.replace(/,/g, '') >= 0 ? 'profit' : 'loss';\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from 'App/i18n';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport Icon         from 'Assets/icon.jsx';\n\nclass IndicativeCell extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movement: null,\n            amount  : 0,\n        };\n    }\n\n    componentWillReceiveProps(props) {\n        this.setState(() => ({\n            movement: props.amount >= this.state.amount ? 'profit' : 'loss',\n            amount  : props.amount,\n        }));\n    }\n\n    render() {\n        const { amount, currency, status } = this.props;\n        const { movement } = this.state;\n        return (\n            <div className='open-positions__indicative' >\n                <div className='open-positions__indicative--amount'>\n                    <Money amount={Math.abs(amount)} currency={currency} />\n                    {status !== 'no-resale' && amount !== 0 && <Icon icon='IconPriceMove' type={movement} />}\n                </div>\n\n                {status === 'no-resale' &&\n                <div className='open-positions__indicative-no-resale-msg indicative__no-resale-msg'>\n                    {localize('Resale not offered')}\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\nIndicativeCell.propTypes = {\n    amount  : PropTypes.number,\n    currency: PropTypes.string,\n    status  : PropTypes.string,\n};\n\nexport default IndicativeCell;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { Popover }        from 'App/Components/Elements/Popover';\nimport { UnderlyingIcon } from 'App/Components/Elements/underlying-icon.jsx';\nimport Icon               from 'Assets/icon.jsx';\nimport {\n    getMarketName,\n    getTradeTypeName }    from '../Helpers/market-underlying';\nimport Shortcode          from '../Helpers/shortcode';\n\nconst MarketSymbolIconRow = ({ payload, show_description }) => {\n    const should_show_category_icon = typeof payload.shortcode === 'string';\n    const info_from_shortcode = Shortcode.extractInfoFromShortcode(payload.shortcode);\n\n    if (should_show_category_icon && info_from_shortcode) {\n        return (\n            <div className='market-symbol-icon'>\n                <div className='market-symbol-icon-name'>\n                    <Popover\n                        classNameTarget='market-symbol-icon__popover'\n                        classNameBubble='market-symbol-icon__popover-bubble'\n                        alignment='top'\n                        message={getMarketName(info_from_shortcode.underlying)}\n                        disable_target_icon\n                    >\n                        <UnderlyingIcon market={info_from_shortcode.underlying} />\n                    </Popover>\n                    {show_description && payload.display_name}\n                </div>\n\n                <div className='market-symbol-icon-category'>\n                    <Popover\n                        classNameTarget='category-type-icon__popover'\n                        classNameBubble='category-type-icon__popover-bubble'\n                        alignment='top'\n                        message={getTradeTypeName(info_from_shortcode.category)}\n                        disable_target_icon\n                    >\n                        <Icon\n                            icon='IconTradeType'\n                            type={(Shortcode.isHighLow({ shortcode_info: info_from_shortcode }))\n                                ? `${info_from_shortcode.category.toLowerCase()}_barrier`\n                                : info_from_shortcode.category.toLowerCase()}\n                        />\n                    </Popover>\n                    {show_description && info_from_shortcode.category}\n                </div>\n            </div>\n        );\n    } else if (['deposit', 'withdrawal'].includes(payload.action_type)) {\n        return (\n            <div className='market-symbol-icon'>\n                {\n                    payload.action_type === 'deposit' ? (\n                        <Icon icon='IconDeposit' />\n                    ) : (\n                        <Icon icon='IconWithdrawal' />\n                    )\n                }\n            </div>\n        );\n    }\n\n    return (\n        <svg width='32' height='32' className='unknown-icon'>\n            <rect width='32' height='32' />\n        </svg>\n    );\n};\n\nMarketSymbolIconRow.propTypes = {\n    action          : PropTypes.string,\n    payload         : PropTypes.object,\n    show_description: PropTypes.bool,\n};\n\nexport default MarketSymbolIconRow;\n","import React               from 'react';\nimport PropTypes           from 'prop-types';\nimport { getProfitOrLoss } from 'Modules/Reports/Helpers/profit-loss';\n\nconst ProfitLossCell = ({ value, children }) => {\n    const status = getProfitOrLoss(value);\n\n    return (\n        <span className={`amount--${status}`}>\n            {children}\n        </span>\n    );\n};\n\nProfitLossCell.propTypes = {\n    value: PropTypes.string,\n};\n\nexport default ProfitLossCell;\n","import classNames           from 'classnames';\nimport React                from 'react';\nimport Icon                 from 'Assets/icon.jsx';\nimport { localize }         from 'App/i18n';\nimport Label                from 'App/Components/Elements/Label/label.jsx';\nimport Money                from 'App/Components/Elements/money.jsx';\nimport ProgressSliderStream from 'App/Containers/ProgressSliderStream';\nimport { getProfitOrLoss }  from 'Modules/Reports/Helpers/profit-loss';\nimport IndicativeCell       from '../Components/indicative-cell.jsx';\nimport MarketSymbolIconRow  from '../Components/market-symbol-icon-row.jsx';\nimport ProfitLossCell       from '../Components/profit_loss_cell.jsx';\n\nconst getModeFromValue = (key) => {\n    const map = {\n        deposit   : 'warn',\n        withdrawal: 'info',\n        sell      : 'danger',\n        buy       : 'success',\n        default   : 'default',\n    };\n\n    if (Object.keys(map).find(x => x === key)) {\n        return map[key];\n    }\n\n    return map.default;\n};\n\n/* eslint-disable react/display-name, react/prop-types */\nexport const getStatementTableColumnsTemplate = (currency) => [\n    {\n        key              : 'icon',\n        title            : '',\n        col_index        : 'action_type',\n        renderCellContent: ({ cell_value, row_obj }) => (\n            <MarketSymbolIconRow\n                action={cell_value}\n                key={row_obj.transaction_id}\n                payload={row_obj}\n            />\n        ),\n    }, {\n        title    : localize('Ref. ID'),\n        col_index: 'refid',\n    }, {\n        title    : localize('Transaction time'),\n        col_index: 'date',\n    }, {\n        key              : 'mode',\n        title            : localize('Transaction'),\n        col_index        : 'action_type',\n        renderCellContent: ({ cell_value, row_obj }) => (\n            <Label mode={getModeFromValue(cell_value)}>{row_obj.action}</Label>\n        ),\n    }, {\n        title            : localize('Credit/Debit'),\n        col_index        : 'amount',\n        renderCellContent: ({ cell_value }) => <div className={`amount--${getProfitOrLoss(cell_value)}`} ><Money has_sign amount={cell_value.replace(/[,]+/g, '')} currency={currency} /></div>,\n    }, {\n        title            : localize('Balance'),\n        col_index        : 'balance',\n        renderCellContent: ({ cell_value }) => <Money amount={cell_value.replace(/[,]+/g, '')} currency={currency} />,\n    },\n];\nexport const getProfitTableColumnsTemplate = (currency, items_count) => [\n    {\n        key              : 'icon',\n        title            : '',\n        col_index        : 'action_type',\n        renderCellContent: ({ cell_value, row_obj, is_footer }) => {\n            if (is_footer) {\n                return localize('Profit/loss on the last {{item_count}} contracts', { item_count: items_count });\n            }\n\n            return (\n                <MarketSymbolIconRow\n                    action={cell_value}\n                    key={row_obj.transaction_id}\n                    payload={row_obj}\n                />\n            );\n        },\n    }, {\n        title    : localize('Ref. ID'),\n        col_index: 'transaction_id',\n    }, {\n        title    : localize('Buy time'),\n        col_index: 'purchase_time',\n    }, {\n        title            : localize('Buy price'),\n        col_index        : 'buy_price',\n        renderCellContent: ({ cell_value, is_footer }) => {\n            if (is_footer) return '';\n\n            return <Money amount={cell_value} currency={currency} />;\n        },\n    }, {\n        title    : localize('Sell time'),\n        col_index: 'sell_time',\n    }, {\n        title            : localize('Sell price'),\n        col_index        : 'sell_price',\n        renderCellContent: ({ cell_value, is_footer }) => {\n            if (is_footer) return '';\n\n            return <Money amount={cell_value} currency={currency} />;\n        },\n    }, {\n        title            : localize('Profit/Loss'),\n        col_index        : 'profit_loss',\n        renderCellContent: ({ cell_value }) => (\n            <ProfitLossCell value={cell_value}>\n                <Money has_sign amount={cell_value.replace(/[,]+/g, '')} currency={currency} />\n            </ProfitLossCell>\n        ),\n    },\n];\nexport const getOpenPositionsColumnsTemplate = (currency) => [\n    {\n        title            : '',\n        col_index        : 'type',\n        renderCellContent: ({ cell_value, row_obj, is_footer }) => {\n            if (is_footer) return localize('Total');\n\n            return (\n                <MarketSymbolIconRow\n                    action={cell_value}\n                    key={row_obj.id}\n                    payload={row_obj.contract_info}\n                />\n            );\n        },\n    }, {\n        title    : localize('Ref. ID'),\n        col_index: 'reference',\n    }, {\n        title            : localize('Buy price'),\n        col_index        : 'purchase',\n        renderCellContent: ({ cell_value }) => (\n            <Money amount={cell_value} currency={currency} />\n        ),\n    }, {\n        title            : localize('Potential payout'),\n        col_index        : 'payout',\n        renderCellContent: ({ cell_value }) => (\n            cell_value ? <Money amount={cell_value} currency={currency} />\n                : <span>-</span>\n        ),\n    }, {\n        title            : localize('Potential profit/loss'),\n        col_index        : 'profit',\n        renderCellContent: ({ row_obj }) => {\n            if (!row_obj.contract_info || !row_obj.contract_info.profit) return;\n            const profit = row_obj.contract_info.profit;\n            // eslint-disable-next-line consistent-return\n            return (\n                <div className={classNames('open-positions__profit-loss', {\n                    'open-positions__profit-loss--negative': (\n                        profit < 0\n                    ),\n                    'open-positions__profit-loss--positive': (\n                        profit > 0\n                    ),\n                })}\n                >\n                    <Money amount={Math.abs(profit)} currency={currency} />\n                    <div className='open-positions__profit-loss--movement'>\n                        <Icon icon='IconPriceMove' type={profit > 0 ? 'profit' : 'loss'} />\n                    </div>\n                </div>\n            );\n        },\n    }, {\n        title            : localize('Indicative price'),\n        col_index        : 'indicative',\n        renderCellContent: ({ cell_value, row_obj }) => (\n            <IndicativeCell amount={+cell_value} currency={currency} status={row_obj.contract_info && !row_obj.is_valid_to_sell ? 'no-resale' : ''} />\n        ),\n    }, {\n        title            : localize('Remaining time'),\n        col_index        : 'id',\n        renderCellContent: ({ cell_value }) => (\n            <ProgressSliderStream id={cell_value} />\n        ),\n    },\n];\n/* eslint-enable react/display-name, react/prop-types */\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst TableCell = ({ col_index, children }) => (\n    <div className={classNames('table__cell', col_index)}>\n        {children}\n    </div>\n);\n\nTableCell.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.string,\n    ]),\n    col_index: PropTypes.string,\n};\n\nexport default TableCell;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nexport default class TableRowInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showDetails: false,\n        };\n    }\n\n    toggleDetails = () => {\n        if (this.props.replace) {\n            this.setState(state => ({ showDetails: !state.showDetails }));\n        }\n    };\n\n    render() {\n        return (\n            <div\n                onClick={this.props.is_footer || !this.props.replace ? undefined : this.toggleDetails}\n                className={classNames(this.props.className, { 'statement__row--detail': this.state.showDetails })}\n            >\n                {\n                    this.state.showDetails ?\n                        <div>\n                            {this.props.replace.component ?\n                                this.props.replace.component\n                                :\n                                <p>{this.props.replace.message}</p>\n                            }\n                        </div>\n                        : this.props.cells\n                }\n            </div>\n        );\n    }\n}\n\nTableRowInfo.propTypes = {\n    cells    : PropTypes.arrayOf(PropTypes.node),\n    className: PropTypes.string,\n    replace  : PropTypes.object,\n};\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { NavLink }  from 'react-router-dom';\nimport TableCell    from './table-cell.jsx';\nimport TableRowInfo from './table-row-info.jsx';\n\nconst TableRow = ({\n    className,\n    columns,\n    is_footer,\n    is_header,\n    replace,\n    row_obj = {},\n    to,\n}) => {\n    const cells = columns.map(({ col_index, renderCellContent, title, key }) => {\n        let cell_content = title;\n        if (!is_header) {\n            const cell_value = row_obj[col_index] || '';\n            cell_content = renderCellContent\n                ? renderCellContent({ cell_value, col_index, row_obj, is_footer })\n                : cell_value;\n        }\n\n        return (\n            <TableCell col_index={col_index} key={key || col_index}>\n                {cell_content}\n            </TableCell>\n        );\n    });\n\n    const row_class_name = classNames('table__row', { 'table__row-link': to || replace }, { [`${className}__row`]: className });\n\n    return (\n        to ?\n            <NavLink\n                className={row_class_name}\n                to={{\n                    pathname: to,\n                    state   : {\n                        from_table_row: true,\n                    },\n                }}\n            >\n                {cells}\n            </NavLink>\n            :\n            <TableRowInfo\n                className={row_class_name}\n                cells={cells}\n                replace={replace}\n                is_footer={is_footer}\n            />\n    );\n};\n\nTableRow.propTypes = {\n    className: PropTypes.string,\n    columns  : PropTypes.array,\n    is_footer: PropTypes.bool,\n    is_header: PropTypes.bool,\n    replace  : PropTypes.object,\n    row_obj  : PropTypes.object,\n    to       : PropTypes.string,\n};\n\nexport default TableRow;\n","import classNames                     from 'classnames';\nimport debounce                       from 'lodash.debounce';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport { FixedSizeList as List }      from 'react-window';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport TableRow                       from './table-row.jsx';\n\n/* TODO:\n      1. implement sorting by column (ASC/DESC)\n      2. implement filtering per column\n*/\n\nclass DataTable extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            height      : 200,\n            width       : 200,\n            window_width: 1024,\n        };\n    }\n\n    resizeDimensions = debounce(() => {\n        this.setState({\n            width       : (window.innerWidth - this.state.window_width) + this.state.width,\n            window_width: window.innerWidth,\n        });\n    }, 250);\n\n    componentDidMount() {\n        this.setState({\n            height      : this.el_table_body.clientHeight,\n            width       : this.el_table_body.clientWidth,\n            window_width: window.innerWidth,\n        });\n        window.onresize = this.resizeDimensions;\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    componentWillUnmount() {\n        window.onresize = null;\n    }\n\n    componentDidUpdate() {\n        this.alignHeader();\n    }\n\n    alignHeader() {\n        // scrollbar inside table-body can push content (depending on the browser and if mouse is plugged in)\n        if (!this.props.data_source.length) return;\n        const first_body_row   = this.el_table_body.firstChild;\n        const scrollbar_offset = this.el_table_head.offsetWidth - first_body_row.offsetWidth;\n        this.el_table_head.style.paddingRight = `${scrollbar_offset}px`;\n    }\n\n    rowRenderer ({\n        index,       // Index of row\n        style,        // Style object to be applied to row (to position it);\n    }) {\n        const {\n            data_source,\n            className,\n            getRowAction,\n            columns,\n            id } = this.props;\n        const item = data_source[index];\n        const action = getRowAction && getRowAction(item);\n\n        // If row content is complex, consider rendering a light-weight placeholder while scrolling.\n        const content = (\n            <TableRow\n                className={className}\n                row_obj={item}\n                columns={columns}\n                key={id}\n                to={typeof action === 'string' ? action : undefined}\n                replace={typeof action === 'object' ? action : undefined}\n            />\n        );\n\n        return (\n            <div style={style}>\n                {content}\n            </div>\n        );\n    }\n\n    render() {\n        const {\n            children,\n            className,\n            columns,\n            data_source,\n            footer,\n            is_empty,\n            onScroll,\n        } = this.props;\n\n        const TableData =\n\n            <React.Fragment>\n                <List\n                    className={className}\n                    height={this.state.height}\n                    itemCount={data_source.length}\n                    itemSize={63}\n                    width={this.state.width}\n                >\n                    {this.rowRenderer.bind(this)}\n                </List>\n                {children}\n            </React.Fragment>;\n\n        return (\n            <div className={classNames('table', {\n                [`${className}`]         : className,\n                [`${className}__table`]  : className,\n                [`${className}__content`]: className,\n            })}\n            >\n                <div className='table__head' ref={el => { this.el_table_head = el; }}>\n                    <TableRow className={className} columns={columns} is_header />\n                </div>\n                <div\n                    className='table__body'\n                    onScroll={onScroll}\n                    ref={el => { this.el_table_body = el; }}\n                >\n                    {is_empty ?\n                        TableData\n                        :\n                        <Scrollbars\n                            autoHeight\n                            autoHeightMax={this.state.height}\n                            autoHide\n                        >\n                            {TableData}\n                        </Scrollbars>\n                    }\n                </div>\n\n                {footer &&\n                    <div className='table__foot'>\n                        <TableRow\n                            className={className}\n                            row_obj={footer}\n                            columns={columns}\n                            is_footer\n                        />\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nDataTable.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.arrayOf(PropTypes.node),\n    ]),\n    className   : PropTypes.string,\n    columns     : PropTypes.array,\n    data_source : MobxPropTypes.arrayOrObservableArray,\n    footer      : PropTypes.object,\n    getRowAction: PropTypes.func,\n    onScroll    : PropTypes.func,\n};\n\nexport default DataTable;\n"],"sourceRoot":""}